<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="19074" parentID="19058" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="16" createDate="2013-07-11T11:28:10" updateDate="2014-08-18T11:19:19" nodeName="Create Web and Worker Roles" urlName="create-web-and-worker-roles" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,17389,19058,19074" isDoc=""><bodyText><![CDATA[<div>
<?UMBRACO_MACRO chunkpath="devcenter/php" hide="0" chunkname="article-left-menu" macroAlias="AzureChunkDisplayer" />
<h1>如何创建 PHP Web 角色和辅助角色</h1>
<p>本指南将说明如何执行以下操作：在 Windows 开发环境中创建 PHP Web 角色或辅助角色，从提供的“内置”版本中选择特定版本的 PHP，更改 PHP 配置，启用扩展以及部署到 Windows Azure。它还介绍了如何将 Web 角色或辅助角色配置为使用您提供的 PHP 运行时（带自定义配置和扩展）。</p>
<h2 id="TableOfContents">目录</h2>
<ul>
<li><a href="#WhatIs">什么是 PHP Web 角色和辅助角色？</a></li>
<li><a href="#DownloadSdk">下载 Windows Azure SDK for PHP</a></li>
<li><a href="#CreateProject">如何：创建云服务项目</a></li>
<li><a href="#AddRole">如何：添加 PHP Web 角色和辅助角色</a></li>
<li><a href="#SpecifyPHPVersion">如何：指定内置 PHP 版本</a></li>
<li><a href="#CustomizePHP">如何：自定义内置 PHP 运行时</a></li>
<li><a href="#OwnPHP">如何：使用您自己的 PHP 运行时</a></li>
<li><a href="#Emulators">如何：在计算和存储仿真程序中运行您的应用程序</a></li>
<li><a href="#Publish">如何：发布应用程序</a></li>
</ul>
<h2 id="WhatIs">什么是 PHP Web 角色和辅助角色？</h2>
<p>Windows Azure 提供了三种用于运行应用程序的计算模型：<a href="/zh-cn/develop/net/fundamentals/compute/#WebSites">Windows Azure 网站</a>、<a href="/zh-cn/develop/net/fundamentals/compute/#VMachine">Windows Azure 虚拟机</a>和 <a href="/zh-cn/develop/net/fundamentals/compute/#CloudServices">Windows Azure 云服务</a>。这三种模型都支持 PHP。云服务（包括 Web 角色和辅助角色）提供了<em>平台即服务 (PaaS)</em>。在云服务中，Web 角色提供专用的 Internet Information Services (IIS) Web 服务器来承载前端 Web 应用程序，而辅助角色可独立于用户交互或输入运行异步任务、运行时间较长的任务或永久性任务。</p>
<p>有关详细信息，请参阅<a href="/zh-cn/manage/services/cloud-services/what-is-a-cloud-service/">什么是云服务？</a>。</p>
<h2 id="DownloadSdk">下载 Windows Azure SDK for PHP</h2>
<p><a href="/zh-cn/develop/php/common-tasks/download-php-sdk/">Windows Azure SDK for PHP</a> 由多个组件构成。本文将使用其中两个组件：Windows Azure PowerShell 和 Windows Azure 仿真程序。可在此处通过 Microsoft Web 平台安装程序安装这两个组件：<a href="http://go.microsoft.com/fwlink/?LinkId=253447&amp;clcid=0x409">安装 Windows Azure PowerShell 和 Windows Azure 仿真程序</a>。</p>
<h2 id="CreateProject">如何：创建云服务项目</h2>
<p>创建 PHP Web 角色和辅助角色的第一步是创建 Windows Azure 服务项目。Windows Azure 服务项目用作 Web 角色和辅助角色的逻辑容器，并包含项目的<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/ee758711.aspx">服务定义 (.csdef)</a> 和<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/ee758710.aspx">服务配置 (.cscfg)</a> 文件。</p>
<p>若要创建新的 Windows Azure 服务项目，请执行以下命令：</p>
<pre class="prettyprint">PS C:\&gt;New-AzureServiceProject myProject</pre>
<p>此命令将创建可将 Web 角色和辅助角色添加到的新目录 (<code>myProject</code>)。</p>
<h2 id="AddRole">如何：添加 PHP Web 角色或辅助角色</h2>
<p>若要将 PHP Web 角色添加到项目，请从项目的根目录中运行以下命令：</p>
<pre class="prettyprint">PS C:\myProject&gt; Add-AzurePHPWebRole roleName</pre>
<p>对于辅助角色，请使用此命令：</p>
<pre class="prettyprint">PS C:\myProject&gt; Add-AzurePHPWorkerRole roleName</pre>
<div class="dev-callout">注意
<p><code>roleName</code> 参数是可选的。如果省略该参数，则将自动生成角色名称。创建的第一个 Web 角色将为 <code>WebRole1</code>，第二个 Web 角色为 <code>WebRole2</code>，依此类推。创建的第一个辅助角色将为 <code>WorkerRole1</code>，第二个辅助角色为 <code>WorkerRole2</code>，依此类推。</p>
</div>
<h2 id="SpecifyPHPVerison">如何：指定内置 PHP 版本</h2>
<p>在将 PHP Web 角色或辅助角色添加到项目时，将修改项目的配置文件，以便在部署应用程序的每个 Web 实例或辅助进程实例时在其上安装 PHP。若要查看默认情况下安装的 PHP 的版本，请运行以下命令：</p>
<pre class="prettyprint">PS C:\myProject&gt; Get-AzureServiceProjectRoleRuntime</pre>
<p>上述命令的输出与下图中所示类似。在此示例中，将 PHP 5.3.17 的 <code>IsDefault</code> 标志设置为 <code>true</code>，这指示它将是安装的默认 PHP 版本。</p>
<pre class="prettyprint">Runtime Version     PackageUri                      IsDefault
------- -------     ----------                      ---------
Node 0.6.17         http://nodertncu.blob.core...   False
Node 0.6.20         http://nodertncu.blob.core...   True
Node 0.8.4          http://nodertncu.blob.core...   False
IISNode 0.1.21      http://nodertncu.blob.core...   True
Cache 1.8.0         http://nodertncu.blob.core...   True
PHP 5.3.17          http://nodertncu.blob.core...   True
PHP 5.4.0           http://nodertncu.blob.core...   False</pre>
<p>可以将 PHP 运行时版本设置为列出的任意 PHP 版本。例如，若要将 PHP 版本（对于名为 <code>roleName</code> 的角色）设置为 5.4.0，请使用以下命令：</p>
<pre class="prettyprint">PS C:\myProject&gt; Set-AzureServiceProjectRole roleName php 5.4.0</pre>
<div class="dev-callout">注意
<p>将来可能会提供更多 PHP 版本，并且可用版本可能会发生更改。</p>
</div>
<h2 id="CustomizePHP">如何：自定义内置 PHP 运行时</h2>
<p>当按上述步骤进行操作时，您可以完全控制所安装的 PHP 运行时的配置，包括修改 <code>php.ini</code> 设置和启用扩展。</p>
<p>若要自定义内置 PHP 运行时，请执行下列步骤：</p>
<ol>
<li>将一个名为 <code>php</code> 的新文件夹添加到 Web 角色的 <code>bin</code> 目录。对于辅助角色，将该文件夹添加到角色的根目录。</li>
<li>在 <code>php</code> 文件夹中，创建另一个名为 <code>ext</code> 的文件夹。将要启用的任何扩展名为 <code>.dll</code> 的文件（例如，<code>php_mongo.dll</code>）置于此文件夹中。</li>
<li>
<p>将 <code>php.ini</code> 文件添加到 <code>php</code> 文件夹中。启用任何自定义扩展，并在此文件中设置任何 PHP 指令。例如，若要打开 <code>display_errors</code> 并启用 <code>php_mongo.dll</code> 扩展，则 <code>php.ini</code> 文件的内容将如下所示：</p>
<pre class="prettyprint">display_errors=On
extension=php_mongo.dll</pre>
</li>
</ol>
<div class="dev-callout">注意
<p>所提供的 <code>php.ini</code> 文件中未显式设置的所有设置都将自动设为其默认值。但请记住，您可以添加整个 <code>php.ini</code> 文件。</p>
</div>
<h2 id="OwnPHP">如何：使用您自己的 PHP 运行时</h2>
<p>在某些情况下，可能需要提供您自己的 PHP 运行时，而不是如上所述那样选择并配置内置 PHP 运行时。例如，可以在 Web 角色或辅助角色中使用您在开发环境中使用的 PHP 运行时，以便更轻松地确保应用程序不会更改生产环境中的行为。</p>
<h3 id="OwnPHPWebRole">将 Web 角色配置为使用您自己的 PHP 运行时</h3>
<p>若要将 Web 角色配置为使用提供的 PHP 运行时，请执行下列步骤。</p>
<ol>
<li>创建 Windows Azure 服务项目并添加 PHP Web 角色，如前面的<a href="#CreateProject">如何：创建云服务项目</a>和<a href="#AddRole">如何：添加 PHP Web 角色或辅助角色</a>两节中所述。</li>
<li>在位于 Web 角色的根目录中的 <code>bin</code> 文件夹中创建一个 <code>php</code> 文件夹，然后将 PHP 运行时（所有二进制文件、配置文件、子文件夹等）添加到该 <code>php</code> 文件夹中。</li>
<li>
<p>（可选）如果 PHP 运行时使用 <a href="http://php.net/sqlsrv">Microsoft Drivers for PHP for SQL Server</a>，则需要将 Web 角色配置为在 <a href="http://msdn.microsoft.com/zh-cn/sqlserver/aa937733.aspx">SQL Server Native Client 2012</a> 可用时安装它。为此，将 <code>sqlncli.msi</code> 安装程序添加到 Web 角色的根目录中的 <code>bin</code> 文件夹。您可在此处下载该安装程序：<a href="http://go.microsoft.com/fwlink/?LinkID=239648">sqlncli.msi x64 安装程序</a>。下一步中所述的启动脚本将在设置角色时以静默方式运行安装程序。如果您的 PHP 运行时不使用 Microsoft Drivers for PHP for SQL Server，则可从下一步中所示的脚本中删除以下行：</p>
<pre class="prettyprint">msiexec /i sqlncli.msi /qn IACCEPTSQLNCLILICENSETERMS=YES</pre>
</li>
<li>
<p>下一步是定义将 <a href="http://www.iis.net/">Internet Information Services (IIS)</a> 配置为使用 PHP 运行时来处理 <code>.php</code> 页的请求的启动任务。为此，请在文本编辑器中打开 <code>setup_web.cmd</code> 文件（位于 Web 角色的根目录的 <code>bin</code> 文件夹中），并将其内容替换为以下脚本：</p>
<pre class="prettyprint">@ECHO ON
cd "%~dp0"


if "%EMULATED%"=="true" exit /b 0


msiexec /i sqlncli.msi /qn IACCEPTSQLNCLILICENSETERMS=YES


SET PHP_FULL_PATH=%~dp0php\php-cgi.exe
SET NEW_PATH=%PATH%;%RoleRoot%\base\x86


%WINDIR%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi /+"[fullPath='%PHP_FULL_PATH%',maxInstances='12',idleTimeout='60000',activityTimeout='3600',requestTimeout='60000',instanceMaxRequests='10000',protocol='NamedPipe',flushNamedPipe='False']" /commit:apphost
%WINDIR%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi /+"[fullPath='%PHP_FULL_PATH%'].environmentVariables.[name='PATH',value='%NEW_PATH%']" /commit:apphost
%WINDIR%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi /+"[fullPath='%PHP_FULL_PATH%'].environmentVariables.[name='PHP_FCGI_MAX_REQUESTS',value='10000']" /commit:apphost
%WINDIR%\system32\inetsrv\appcmd.exe set config -section:system.webServer/handlers /+"[name='PHP',path='*.php',verb='GET,HEAD,POST',modules='FastCgiModule',scriptProcessor='%PHP_FULL_PATH%',resourceType='Either',requireAccess='Script']" /commit:apphost
%WINDIR%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi /"[fullPath='%PHP_FULL_PATH%'].queueLength:50000"</pre>
</li>
<li>
<p>将应用程序文件添加到 Web 角色的根目录。这将是 Web 服务器的根目录。</p>
</li>
<li>
<p>按照下面的<a href="#Publish">如何：发布您的应用程序</a>一节中所述进行操作来发布您的应用程序。</p>
</li>
</ol>
<div class="dev-callout">注意
<p>在按照上述使用您自己的 PHP 运行时的步骤进行操作后，可以删除 <code>download.ps1</code> 脚本（位于 Web 角色的根目录的 <code>bin</code> 文件夹中）。</p>
</div>
<h3 id="OwnPHPWorkerRole">将辅助角色配置为使用您自己的 PHP 运行时</h3>
<p>若要将辅助角色配置为使用提供的 PHP 运行时，请执行下列步骤。</p>
<ol>
<li>创建 Windows Azure 服务项目并添加 PHP 辅助角色，如前面的<a href="#CreateProject">如何：创建云服务项目</a>和<a href="#AddRole">如何：添加 PHP Web 角色或辅助角色</a>两节中所述。</li>
<li>在辅助角色的根目录中创建一个 <code>php</code> 文件夹，然后将 PHP 运行时（所有二进制文件、配置文件、子文件夹等）添加到该 <code>php</code> 文件夹中。</li>
<li>
<p>（可选）如果 PHP 运行时使用 <a href="http://php.net/sqlsrv">Microsoft Drivers for PHP for SQL Server</a>，则需要将辅助角色配置为在 <a href="http://msdn.microsoft.com/zh-cn/sqlserver/aa937733.aspx">SQL Server Native Client 2012</a> 可用时安装它。为此，将 <code>sqlncli.msi</code> 安装程序添加到辅助角色的根目录。您可在此处下载该安装程序：<a href="http://go.microsoft.com/fwlink/?LinkID=239648">sqlncli.msi x64 安装程序</a>。下一步中所述的启动脚本将在设置角色时以静默方式运行安装程序。如果您的 PHP 运行时不使用 Microsoft Drivers for PHP for SQL Server，则可从下一步中所示的脚本中删除以下行：</p>
<pre class="prettyprint">msiexec /i sqlncli.msi /qn IACCEPTSQLNCLILICENSETERMS=YES</pre>
</li>
<li>
<p>下一步是定义在设置角色时将 <code>php.exe</code> 可执行文件添加到辅助角色的 PATH 环境变量中的启动任务。为此，请在文本编辑器中打开 <code>setup_worker.cmd</code> 文件（位于辅助角色的根目录中），并将其内容替换为以下脚本：</p>
<pre class="prettyprint">@echo on


cd "%~dp0"


echo Granting permissions for Network Service to the web root directory...
icacls ..\ /grant "Network Service":(OI)(CI)W
if %ERRORLEVEL% neq 0 goto error
echo OK


if "%EMULATED%"=="true" exit /b 0


msiexec /i sqlncli.msi /qn IACCEPTSQLNCLILICENSETERMS=YES


setx Path "%PATH%;%~dp0php" /M


if %ERRORLEVEL% neq 0 goto error


echo SUCCESS
exit /b 0


:error


echo FAILED
exit /b -1</pre>
</li>
<li>
<p>将应用程序文件添加到辅助角色的根目录。</p>
</li>
<li>
<p>按照下面的<a href="#Publish">如何：发布您的应用程序</a>一节中所述进行操作来发布您的应用程序。</p>
</li>
</ol>
<h2 id="Emulator">如何：在计算和存储仿真程序中运行您的应用程序</h2>
<p>Windows Azure 计算和存储仿真程序提供了一个本地环境，可在将 Windows Azure 应用程序部署到云之前在该环境中测试此应用程序。仿真程序与 Windows Azure 环境之间存在一些差异。若要更好地理解这一点，请参阅<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/gg432960.aspx">计算仿真程序与 Windows Azure 之间的差异</a>和<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/gg433135.aspx">存储仿真程序与 Windows Azure 存储服务之间的差异</a>。</p>
<p>请注意，您必须本地安装 PHP 才能使用计算仿真程序。计算仿真程序将使用本地 PHP 安装来运行应用程序。</p>
<p>若要在仿真程序中运行您的项目，请从项目的根目录中执行以下命令：</p>
<pre class="prettyprint">PS C:\MyProject&gt; Start-AzureEmulator</pre>
<p>您将看到与下图中所示类似的输出：</p>
<pre class="prettyprint">Creating local package...
Starting Emulator...
Role is running at http://127.0.0.1:81
Started</pre>
<p>通过打开 Web 浏览器并浏览到输出中所示的本地地址（上面的示例输出中的 <code>http://127.0.0.1:81</code>），可以查看正在仿真程序上运行的应用程序。</p>
<p>若要停止仿真程序，请执行此命令：</p>
<pre class="prettyprint">PS C:\MyProject&gt; Stop-AzureEmulator</pre>
<h2 id="Publish">如何：发布应用程序</h2>
<p>若要发布应用程序，您需要先使用 <strong>Import-PublishSettingsFile</strong> cmdlet 导入发布设置，然后使用 <strong>Publish-AzureServiceProject</strong> cmdlet 发布应用程序。有关使用这些 cmdlet 的详细信息，请分别参阅<a href="/zh-cn/develop/php/how-to-guides/powershell-cmdlets/#ImportPubSettings">如何：导入发布设置</a>和<a href="/zh-cn/develop/php/how-to-guides/powershell-cmdlets/#Deploy">如何：将云服务部署到 Windows Azure</a>。</p>
</div>]]></bodyText><umbracoNaviHide>1</umbracoNaviHide><pageTitle>创建 Web 角色和辅助角色</pageTitle><localize>1</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>develop-php-common-tasks-create-web-and-worker-roles</linkid><metaKeywords></metaKeywords><metaDescription><![CDATA[]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>创建 Web 角色和辅助角色</urlDisplayName><disqusComments>1</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate>dynamic-leftnav</pageTemplate></TextpageLeftNav></localize>