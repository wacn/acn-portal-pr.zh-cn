<?xml version="1.0" encoding="UTF-8"?>
<localize><Chunk id="18718" parentID="18426" level="5" writerID="52" creatorID="94" nodeType="9257" template="0" sortOrder="31" createDate="2013-07-11T09:58:04" updateDate="2014-08-18T11:04:13" nodeName="troubleshooting_a_website" urlName="troubleshooting_a_website" writerName="uRest" creatorName="xunfan" path="-1,11978,13607,16345,18426,18718" isDoc=""><hideAll>0</hideAll><localize>1</localize><localizePartial>0</localizePartial><bodyText><![CDATA[<div><!-- http://daringfireball.net/projects/markdown/syntax --> <!-- http://go.microsoft.com/fwlink/?LinkId=251824 -->
<?UMBRACO_MACRO chunkpath="devcenter/shared" hide="0" chunkname="article-left-menu" macroAlias="AzureChunkDisplayer" />
<h1>排除网站故障</h1>
<p>通过将网站配置为显示应用程序错误，将网站配置为显示环境变量，启用网站诊断，然后分析网站应用程序错误和诊断数据以找出并解决问题，即可实现排除网站故障。本教程将逐步引导您完成以下过程：创建一个简单的网站并将其部署到 Windows Azure，在该网站上引发一个错误，然后应用配置和日志记录选项，以便生成可通过对其进行分析来确定并处理错误的故障排除数据。</p>
<div class="dev-callout">注意
<p>在本文档中，网站既可指在 Windows Azure 上运行的 Web 应用程序的主机，也可指正在运行的主机实例。</p>
</div>
<h2>网站诊断是什么？</h2>
<p>网站诊断提供以下日志记录和跟踪选项：</p>
<ul>
<li><strong>详细错误日志记录</strong> - 记录网站产生的所有错误。</li>
<li><strong>失败请求跟踪</strong> - 记录客户端对网站的所有失败请求。</li>
<li><strong>Web 服务器日志记录</strong> - 按 <a href="http://go.microsoft.com/fwlink/?LinkID=90561">W3C 扩展日志文件格式</a>记录网站上的所有 HTTP 事务。</li>
</ul>
<p>诊断日志文件保存到 FTP 站点供下载到本地计算机。</p>
<h2>概念</h2>
<p>本文引入的概念包括：</p>
<ul>
<li><strong>网站开发</strong> - 在本地计算机上安装 Microsoft WebMatrix 并使用它创建网站。</li>
<li><strong>在 Windows Azure 上创建和管理网站</strong> - 使用 Windows Azure 管理门户创建和配置网站。</li>
<li><strong>网站部署</strong> - 将网站从本地计算机部署到 Windows Azure。</li>
<li><strong>使用配置选项和诊断排除网站故障</strong> - 将网站配置为显示应用程序错误和环境变量，为网站配置诊断，收集诊断数据，然后分析显示的应用程序错误和诊断数据以找出并解决问题。</li>
</ul>
<h2>安装开发人员工具并在本地计算机上创建网站</h2>
<p>在讨论如何排除网站故障之前，必须先创建网站。本节演练使用 Microsoft WebMatrix 创建简单网站，然后将该网站部署到 Windows Azure。</p>
<h3><a name="installwebmatrix"></a>安装 Microsoft WebMatrix</h3>
<p>访问 <a href="http://go.microsoft.com/fwlink/?LinkId=251418">http://www.microsoft.com/web/webmatrix</a>，然后单击“Free Download”<strong></strong>（免费下载）按钮。此操作将运行一个 Web 平台安装程序，后者先安装运行 WebMatrix 所需的所有依赖项，然后安装 WebMatrix。</p>
<h3><a name="createlocalsite"></a>用 WebMatrix 在本地计算机上创建网站</h3>
<p>若要用 WebMatrix 创建网站，请执行以下步骤：</p>
<ol>
<li>依次单击“开始”、“所有程序”、“Microsoft WebMatrix”、“Microsoft WebMatrix”以显示“WebMatrix 快速启动”屏幕。</li>
<li>单击“模板”以显示可用的模板。</li>
<li>
<p>选择“入门网站”模板，为“网站名称”输入一个值（例如 AzureWebDiag），然后单击“下一步”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootsitefromtemplate.png" alt="通过模板新建网站"/></p>
<p>如果成功创建了网站，则将打开它以供在 WebMatrix IDE 中进行编辑：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootwebmatrixide.png" alt="在 WebMatrix IDE 中打开的新网站"/></p>
</li>
<li>
<p>通过单击在 WebMatrix IDE 中显示的网站的 URL，确认正在计算机上运行该网站的实例，然后浏览器应显示该网站的默认页：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootdefaultwebpage.png" alt="网站的默认网页"/></p>
</li>
</ol>
<p>现已用 WebMatrix 成功创建了网站。</p>
<h2>在 Windows Azure 中创建网站</h2>
<p>必须首先在 Windows Azure 中创建网站，然后才能将网站从 WebMatrix 部署到 Windows Azure。本节演练在 Windows Azure 中创建网站。</p>
<h3><a name="quickcreateazurewebsite"></a>在 Windows Azure 中“快速创建”新网站</h3>
<ol>
<li>连接到 <a href="https://manage.windowsazure.cn">Windows Azure 门户</a>，然后依次单击“新建”<strong></strong>、“网站”<strong></strong>“快速创建”<strong></strong>。</li>
<li>
<p>为 URL 输入一个名称（例如，AzureWebDiag），选择相应的区域，然后单击“创建网站”<strong></strong>。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootcreateazurewebsite.png" alt="创建新网站"/></p>
</li>
<li>
<p>创建该网站后，单击该网站的名称（在 Windows Azure 门户的网站页的“名称”<strong></strong>列中列出该名称），此操作将打开该网站的“快速启动”<strong></strong>管理页：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootazurewebdiagquickstart.png" alt="“快速启动”管理页"/></p>
</li>
</ol>
<h3><a name="deploymentuser"></a>创建部署用户凭据</h3>
<p>网站支持多种部署技术，包括 MSDeploy/Webdeploy、TFS、FTP 和 GIT。本教程将介绍如何使用 FTP 将网站从开发人员计算机部署到 Windows Azure。GIT 和 FTP 部署都要求用从网站管理页中生成的特定<strong>部署用户</strong>凭据进行身份验证。如果尚未创建部署用户凭据，请执行以下步骤：</p>
<ol>
<li>
<p>在“快速启动”<strong></strong>管理页上的“发布应用程序”<strong></strong>标题下，单击“设置部署凭据”<strong></strong>。此操作将显示“部署凭据”<strong></strong>对话框。然后，输入用户名和密码的值，再单击复选标记以生成部署用户凭据。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootdeploymentcredentials.png" alt="创建部署凭据"/></p>
</li>
<li>
<p>打开网站的“仪表板”<strong></strong>管理页，然后在“速览”<strong></strong>部分中，可确认已将该网站配置为使用您已生成的部署用户凭据。始终使用语法 <strong>sitename\username</strong> 指定网站的部署用户凭据：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootquickglanceborder.png" alt="验证部署用户"/></p>
</li>
<li>
<p>单击在“网站 URL”<strong></strong>下显示的链接以确认可从浏览器中访问该网站的实例。您应看到与下图类似的网页：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootunderconstruction.png" alt="“网站建设中”页"/></p>
</li>
</ol>
<h2>将网站从开发人员计算机部署到 Windows Azure</h2>
<p>既然已在 Windows Azure 中创建了网站并生成了必要的部署用户凭据，那么可将该网站从开发人员计算机部署到 Windows Azure。若要使用 FTP 将网站部署到 Windows Azure，可使用多种可在 Internet 上下载的 FTP 客户端之一，如果应用程序支持 FTP 发布，则还可直接从开发环境中进行部署。由于 WebMatrix 支持 FTP 发布，因此按以下这些步骤将您在 WebMatrix 中创建的网站发布到 Windows Azure：</p>
<ol>
<li>打开您用 WebMatrix 创建的网站。</li>
<li>
<p>从 WebMatrix IDE 中显示的网站的默认视图中，单击“发布”<strong></strong>按钮以显示“发布你的站点”<strong></strong>窗口，然后单击“我已有托管的网站”<strong></strong>下的“输入设置”<strong></strong>链接。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootpublishsettings.png" alt="WebMatrix 发布设置"/></p>
</li>
<li>
<p id="pubsettings">在“发布设置”对话框中输入以下值：</p>
<ul>
<li><strong>协议：</strong>选择“FTP”<strong></strong></li>
<li><strong>服务器：</strong>指定在该网站的“仪表板”<strong></strong>管理页上“FTP 主机名”<strong></strong>下列出的 URL。</li>
<li><strong>网站路径：</strong> site/wwwroot</li>
<li><strong>用户名：</strong>指定在该网站的“仪表板”<strong></strong>管理页上“部署用户”<strong></strong>下列出的帐户。</li>
<li><strong>密码：</strong> 指定为该网站创建的部署用户的密码。</li>
<li><strong>目标 URL：</strong>指定在该网站的“仪表板”<strong></strong>管理页上“网站 URL”<strong></strong>下列出的 URL。</li>
<li><strong>保存密码：</strong> 选中此选项将保存部署用户密码。</li>
<li><strong>验证连接：</strong> 单击此选项将确认 WebMatrix 可使用指定的参数连接到 FTP 主机。</li>
</ul>
</li>
<li>单击“保存”<strong></strong>，随后将显示“发布兼容性”<strong></strong>窗口。单击“继续”<strong></strong>以执行兼容性测试。
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootPublishPreview2.png" alt="“发布兼容性”窗口"/></p>
</li>
<li>
<p>再次单击“继续”<strong></strong>按钮以开始将本地网站部署到 Windows Azure。WebMatrix 将计算自上次发布该网站以来有哪些文件已更改（由于这是首次将该网站发布到 Windows Azure，因此为所有文件），然后显示“发布预览”<strong></strong>对话框：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootpublishpreview.png" alt="WebMatrix 发布预览"/></p>
</li>
<li>
<p>选中文件 StarterSite.sdf 旁的复选框，然后单击“继续”<strong></strong>以开始部署到 Windows Azure。</p>
</li>
<li>
<p>发布完毕后，单击在“仪表板”<strong></strong>管理页上“网站 URL”<strong></strong>下显示的链接，从浏览器中打开该网站的实例。您应看到与下图类似的网页：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootdefaultwebpage.png" alt="发布到 Windows Azure 的网站"/></p>
</li>
</ol>
<h2>启用对网站的诊断</h2>
<p>在“配置”<strong></strong>管理页上启用对网站的诊断。在“配置”<strong></strong>管理页的“诊断”<strong></strong>部分下，可启用或禁用以下日志记录和跟踪选项：</p>
<ul>
<li><strong>Web 服务器日志记录</strong> - 开启“Web 服务器日志记录”将按 W3C 扩展日志文件格式保存网站日志。</li>
<li><strong>详细错误消息</strong> - 开启详细错误消息的日志记录将捕获网站的实例产生的所有错误。</li>
<li><strong>失败请求跟踪</strong> - 开启失败请求跟踪将捕获失败的客户端请求的信息。</li>
</ul>
<p>将网站的所有日志记录和跟踪选项都设置为“开”<strong></strong>，然后单击页面底部的“保存”<strong></strong>图标。</p>
<h3><a name="verifyftpconnectivity"></a>验证与存储日志文件的 FTP 站点的连接</h3>
<p>使用网站“仪表板”<strong></strong>管理页中的参数连接到存储诊断数据的 FTP 站点。使用<a href="#deploymentuser">早先创建</a>的<strong>部署用户</strong>帐户凭据打开在“诊断日志”<strong></strong>下列出的 FTP 站点。考虑使用 <a href="http://go.microsoft.com/fwlink/?LinkId=247914">FileZilla</a> 等 FTP 客户端下载日志文件。在连接 FTP 站点和从其下载文件方面，FTP 客户端通常比 Web 浏览器更灵活。</p>
<h2>在网站上注册帐户</h2>
<p>按以下这些步骤在该网站上注册帐户：</p>
<ol>
<li>
<p>从浏览器中打开该网站，然后在默认网页的右上角单击“注册”<strong></strong>。随后将转到与下图类似的注册页：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootregisteracct.png" alt="网站注册页"/></p>
</li>
<li>
<p>输入电子邮件地址和密码，然后单击“注册”<strong></strong>。注册后，将重定向到默认网页，并且将用您在注册页上指定的电子邮件帐户为您登录：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootloggedon.png" alt="已登录到网站"/></p>
</li>
</ol>
<h2>在网站上引入错误情况</h2>
<p>从网站下载和分析诊断数据之前，修改网站以产生错误将很有用。按下面的步骤产生错误情况并将网站配置为显示应用程序错误。</p>
<h3><a name="breakregistration"></a>重命名网站用户帐户数据库文件</h3>
<p>该网站被配置为在文件 <strong>StarterSite.sdf</strong> 中存储帐户注册信息。若要在该网站的实例上引入错误情况，请在已部署的网站上将文件 <strong>StarterSite.sdf</strong> 重命名为 <strong>StarterSite.bak</strong>：</p>
<ol>
<li>在该网站的“仪表板”<strong></strong>页上，单击“速览”<strong></strong>部分下的“FTP 主机名”<strong></strong>。此操作将启动一个 Internet Explorer 实例。按 ALT 键，然后选择“查看”<strong></strong>菜单。接下来，选择“在 Windows 资源管理器中打开 FTP 网站”<strong></strong>。</li>
<li>导航到 /site/wwwroot/App_Data/ 目录。</li>
<li>将文件 <strong>StarterSite.sdf</strong> 重命名为 <strong>StarterSite.bak</strong>。重命名该文件后，Windows Azure 网站将无法访问用户帐户数据库，从而导致在客户端连接到该网站的实例时出错。</li>
</ol>
<h3><a name="addwebconfig"></a>将网站配置为显示应用程序错误</h3>
<p>ASP.NET <a href="http://go.microsoft.com/fwlink/?LinkId=251836">customErrors</a> 配置设置的默认 <strong>mode</strong> 为 <strong>RemoteOnly</strong>，它阻止显示应用程序错误。若要将网站配置为显示应用程序错误，请创建一个 web.config 文件，然后将 <strong>customErrors</strong> 的 <strong>mode</strong> 特性设置为 <strong>Off</strong>：</p>
<ol>
<li>
<p>打开位于网站根目录中的 web.config 文件。用记事本（或您想使用的任何编辑器）打开该文件，然后在 &lt;system.web&gt; 元素内添加以下 XML 代码：</p>
<pre class="prettyprint">&lt;customErrors mode="Off"/&gt;</pre>
<p>如果无法确定网站的位置，则打开 WebMatrix，然后右键单击“AzureWebDiag”，再选择“在文件资源管理器中显示”<strong></strong>。</p>
<div class="dev-callout">注意
<p>未将在 Windows Azure 中运行的 ASP.NET 网站配置为显示应用程序错误时，如果发生应用程序错误，将显示与下图类似的网页：</p>
</div>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootwebsiteerror1.png" alt="一般应用程序错误"/></p>
</li>
</ol>
<h3><a name="viewwebsitevariables"></a>显示网站的环境变量</h3>
<p>为了进行故障排除，了解网站环境变量的值可能比较有用。若要显示 .NET 或 PHP 网站的环境变量，请首先将以下代码粘贴到记事本中，然后按指定的文件名保存到网站根目录：</p>
<p><strong>environment.aspx</strong></p>
<pre class="prettyprint">&lt;script language="C#" runat="server"&gt; public void Page_Load(Object sender, EventArgs E) {     System.Collections.DictionaryEntry dictEntry = default(System.Collections.DictionaryEntry);     Response.Write("&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;");     Response.Write("&lt;table border=1&gt;");     Response.Write("&lt;tr&gt;&lt;td colspan=2&gt;&lt;font color='red'&gt;Environment variables&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;");     Response.Write("&lt;tr&gt;&lt;td&gt;Key&lt;/td&gt;&lt;td&gt;Value&lt;/td&gt;&lt;/tr&gt;");      foreach (DictionaryEntry dictEntry_loopVariable in Environment.GetEnvironmentVariables())     {        dictEntry = dictEntry_loopVariable;        Response.Write("&lt;tr&gt;&lt;td&gt;" + (dictEntry.Key.ToString()) +         "&lt;/td&gt;&lt;td&gt;" + (dictEntry.Value.ToString()) + "&lt;/td&gt;&lt;/tr&gt;");     }     Response.Write("&lt;/table&gt;&lt;br&gt;&lt;br&gt;");     Response.Write("&lt;table border=1&gt;");     Response.Write("&lt;tr&gt;&lt;td colspan=2&gt;&lt;font color='blue'&gt;Server Variables&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;");     Response.Write("&lt;tr&gt;&lt;td&gt;Key&lt;/td&gt;&lt;td&gt;Value&lt;/td&gt;&lt;/tr&gt;");      int loop1, loop2;     NameValueCollection coll;      // Load ServerVariable collection into NameValueCollection object.     coll=Request.ServerVariables;      // Get names of all keys into a string array.      String[] arr1 = coll.AllKeys;      for (loop1 = 0; loop1 &lt; arr1.Length; loop1++)      {         Response.Write("&lt;tr&gt;");         Response.Write("&lt;td&gt;" + arr1[loop1] + "&lt;/td&gt;");         String[] arr2=coll.GetValues(arr1[loop1]);          for (loop2 = 0; loop2 &lt; arr2.Length; loop2++)          {             Response.Write("&lt;td&gt;" + Server.HtmlEncode(arr2[loop2]) + "&lt;/td&gt;");         }         Response.Write("&lt;/tr&gt;");     }     Response.Write("&lt;/table&gt;"); } &lt;/script&gt;</pre> <p><strong>environment.php</strong></p> <pre class="prettyprint">&lt;?php echo "&lt;pre&gt;"; print_r($_SERVER); echo "&lt;/pre&gt;"; ?&gt;</pre>
<p>将文件 <strong>environment.aspx</strong> 添加到 .NET Web 应用程序或将文件 <strong>environment.php</strong> 添加到 PHP Web 应用程序时，在将网站部署到 Windows Azure 后，可浏览到这些文件以查看赋给网站环境变量的值。</p>
<h3><a name="deployerrortoazure"></a>将经过更新的网站部署到 Windows Azure</h3>
<ol>
<li>
<p>在 WebMatrix IDE 中单击“发布”<strong></strong>。WebMatrix 将计算自上次发布以来对文件做出的任何更改，然后在与下图类似的对话框中显示这些更改：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootpublishpreview2.png" alt="WebMatrix 发布预览"/></p>
</li>
<li>
<p>单击“继续”<strong></strong>以开始将这些文件传输到 Windows Azure。</p>
</li>
<li>
<p>发布完毕后，单击在“仪表板”<strong></strong>管理页上“网站 URL”<strong></strong>下显示的链接，从浏览器中打开该网站。您应看到与下图类似的网页：</p>
<p><a name="debugapperr"></a> <img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootwebsiteerror2.png" alt="详细应用程序错误"/></p>
</li>
</ol>
<h2>将诊断日志文件下载到本地计算机</h2>
<p>既然已在网站上引入了错误情况，那么可将得到的诊断日志文件下载到本地计算机以供分析。若要确保网站诊断创建在网站“配置”<strong></strong>管理页的“诊断”<strong></strong>部分下指定的所有日志文件，请刷新浏览器一两次以确保发生该错误。按以下这些步骤将诊断日志文件下载到本地计算机：</p>
<ol>
<li>打开网站的“仪表板”<strong></strong>管理页，然后记下在“诊断日志”<strong></strong>下列出的 FTP 站点以及在“部署用户”<strong></strong>下列出的帐户。FTP 站点是日志文件所在的位置，而在“部署用户”下列出的帐户用于向 FTP 站点进行身份验证。</li>
<li>
<p>考虑使用 <a href="http://go.microsoft.com/fwlink/?LinkId=247914">FileZilla</a> 等 FTP 客户端连接到 FTP 站点。在指定凭据和查看 FTP 站点上的文件夹方面，FTP 客户端比通常用浏览器这样做更加易用。下面的屏幕快照是在 FileZilla FTP 客户端连接到存储 AzureWebDiag 网站的日志文件的 FTP 站点时从软件中捕获的。FTP 主机名和部署用户凭据以红色突出显示。若要将右侧远程 FTP 文件夹的内容复制到左侧的本地文件夹，请单击以选择左侧的文件夹，然后右键单击右侧的文件夹，再从随后显示的快捷菜单中选择“下载”<strong></strong>：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootfilezilla.png" alt="FileZilla FTP 客户端"/></p>
</li>
<li>
<p>用 Windows 资源管理器打开左侧的文件夹以访问所下载的日志文件：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootlogfiles.png" alt="查看日志文件"/></p>
</li>
</ol>
<h2>分析网站日志文件</h2>
<p>可按如下方式对不同的日志文件类型执行基本分析：</p>
<table border="0" cellspacing="0" cellpadding="0" style="border: thin solid #000000; width: 655px;">
<tbody>
<tr valign="top" style="background-color: silver; font-weight: bold;">
<td style="width: 145px;">日志文件</td>
<td style="width: 510px;">分析方式</td>
</tr>
<tr valign="top">
<td>详细错误日志记录</td>
<td>打开 /LogFiles/DetailedErrors/ 文件夹中的 .htm 文件。</td>
</tr>
<tr valign="top">
<td>失败请求跟踪</td>
<td>打开 /LogFiles/W3SVC#########/ 文件夹中的 .xml 文件。</td>
</tr>
<tr valign="top">
<td>Web 服务器日志记录</td>
<td>使用 <a href="http://go.microsoft.com/fwlink/?LinkId=246619" title="Log Parser 2.2">Log Parser 2.2</a> 分析 /LogFiles/http/RawLogs/ 文件夹中的 .log 文件。</td>
</tr>
</tbody>
</table>
<h3><a name="detailederrors"></a>查看详细错误日志记录的结果</h3>
<p>网站日志文件包括用于查看详细错误日志记录结果的格式化功能。使用 Web 浏览器打开任何保存到 /LogFiles/DetailedErrors/ 文件夹的 .htm 文件：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootdetailederrors.png" alt="查看详细错误"/></p>
<p>详细错误日志记录结果还包括有关解决错误的建议，包括相关 Microsoft 知识库文章的链接。</p>
<h3><a name="failedrequests"></a>查看失败请求跟踪的结果</h3>
<p>网站日志文件提供用于查看失败请求跟踪的结果的格式化功能。使用 Web 浏览器打开任何保存到 /LogFiles/W3SVC#########/ 文件夹的 .xml 文件：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootfailedrequesttracing.png" alt="失败请求跟踪"/></p>
<p>对网站的失败请求跟踪基于 IIS 7.5 附带的失败请求跟踪功能。</p>
<h3><a name="webserverlogging"></a>分析 Web 服务器日志</h3>
<p>网站日志按 W3C 扩展日志文件格式记录所有 HTTP 事务并将其保存到 /LogFiles/http/RawLogs/ 文件夹。可使用 <a href="http://go.microsoft.com/fwlink/?LinkId=246619">Log Parser 2.2</a> 分析网站日志：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/tshootlogparser.png" alt="Log Parser 命令窗口"/></p>
<p>有关 Log Parser 2.2 的详细信息，请参阅<a href="http://go.microsoft.com/fwlink/?LinkId=251994">下载 Log Parser 2.2</a></p>
<h2>排除 AzureWebDiag 网站故障</h2>
<p>本节介绍如何使用在将网站配置为显示错误并启用网站跟踪和日志记录后提供的信息参与排除网站故障。</p>
<h3><a name="tshootwithloggingandtracing"></a>使用日志记录和跟踪信息解决网站问题</h3>
<p>对于解决将文件 startersite.sdf 重命名为文件 startersite.bak 所导致的错误，Web 服务器日志记录、详细错误消息日志记录和失败请求跟踪无法给出确定的原因和问题的解决方法。但是，日志记录和跟踪文件通过明确指示在客户端连接到网站时网站上产生了 HTTP 状态代码“500 内部服务器错误”<strong></strong>，排除了多种可能的原因。这样非常有把握断定问题与授权标头不合适（“HTTP 401 未授权”<strong></strong>）、请求语法有误（“HTTP 400 错误的请求”<strong></strong>）或许多其他 HTTP 3xx，4xx 和 5xx 状态代码无关。根据 <a href="http://go.microsoft.com/fwlink/?LinkId=252804">HTTP 1.1 状态定义</a>，HTTP 状态代码“500 内部服务器错误”<strong></strong>表示“服务器遇到意外情况，致使无法履行请求”。</p>
<h3><a name="tshootwitherrormessages"></a>使用详细网站错误解决网站问题</h3>
<p>其他故障排除操作应重点关注因修改 web.config 文件或可能因分析网站的环境变量而显示的错误消息。</p>
<p>如果注意观察<a href="#debugapperr">网站上产生的详细错误消息</a>，我们会发现在文件 _AppStart.cshtml 第 2 行中的以下方法调用引发了未经处理的异常：</p>
<pre class="prettyprint">WebSecurity.InitializeDatabaseConnection("StarterSite", "UserProfile", "UserId", "Email", true);</pre>
<p>错误的“说明”<strong></strong>：是“执行当前 Web 请求期间，出现未经处理的异常。请检查堆栈跟踪信息，以了解有关该错误以及代码中导致错误的出处的详细信息。”</p>
<p><strong>异常详细信息：</strong>对于错误列出的为“System.InvalidOperationException:未找到连接字符串‘StarterSite’。”</p>
<p>如果我们检查在错误下显示的堆栈跟踪信息，即可发现错误来源于调用在 <a href="http://go.microsoft.com/fwlink/?LinkId=252805">WebSecurity.InitializeDatabaseConnection 方法</a> 中介绍的 WebMatrix.WebData.WebSecurity 类的 InitializeDatabaseConnection() 方法。</p>
<p>由于 InitializeDatabaseConnection 方法仅使用 5 个参数，因此我们判断正在调用在主题 <a href="http://go.microsoft.com/fwlink/?LinkId=252806">WebSecurity.InitializeDatabaseConnection Method (String, String, String, String, Boolean)</a> 中介绍的重载 InitializeDatabaseConnection() 方法。</p>
<p>由于异常详细信息指示“未找到连接字符串‘StarterSite’”，因此我们可注意观察 <strong>connectionStringname</strong> 参数的定义：</p>
<p><strong>connectionStringName</strong> 类型：System.String<br /> 包含用户信息的数据库的连接字符串的名称。如果使用的是 SQL Server Compact，则这可以是数据库文件（.sdf 文件）的名称，不含 .sdf 文件扩展名。</p>
<p>此参数定义可提供关于错误原因的线索。据<a href="http://go.microsoft.com/fwlink/?LinkId=208661">在 WebMatrix 中连接到 SQL Server 或 MySQL 数据库</a>称，“WebMatrix 中含有 SQL Server Compact，后者是 Microsoft SQL Server 的一个轻型级版本，通过它可为网站创建数据库。创建数据库时，<strong>添加其作为网站的 App_Data 文件夹中的一个 .sdf 文件。</strong>”由于此网站的确<em></em>使用 SQL Server Compact，并且为 connectionStringName 参数指定的值为 <strong>StarterSite</strong>，因此 InitializeDatabaseConnection() 方法在网站的 \root\App_Data\ 目录中查找文件 StarterSite.sdf。</p>
<p>通过检查网站的 \root\App_Data\ 目录，我们可确认没有名为 StarterSite.sdf 的文件，当然，这是因为我们已将其重命名为 StarterSite.bak。在将此文件重命名回 startersite.sdf 后，InitializeDatabaseConnection() 方法可找到其预料之中的文件，而网站按预期的那样运行。</p>
<h3>后续步骤</h3>
<ul>
<li><a href="http://www.windowsazure.cn/zh-cn/develop/net/tutorials/web-site-with-sql-database/">包含 SQL Database 的 ASP.NET MVC 网站</a></li>
<li><a href="http://www.windowsazure.cn/zh-cn/develop/net/tutorials/website-with-webmatrix/">使用 WebMatrix 创建和部署网站</a></li>
<li><a href="http://www.windowsazure.cn/zh-cn/develop/net/tutorials/website-from-gallery/">通过库创建网站</a></li>
<li><a href="http://www.windowsazure.cn/zh-cn/develop/net/tutorials/website-with-mongodb-vm/">在虚拟机上使用 MongoDB 的网站</a></li>
</ul>
</div>]]></bodyText></Chunk></localize>