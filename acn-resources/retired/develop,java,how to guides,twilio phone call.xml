<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="18565" parentID="18554" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="11" createDate="2013-06-04T09:19:27" updateDate="2014-08-18T11:12:22" nodeName="Twilio Phone Call" urlName="twilio-phone-call" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,18396,18554,18565" isDoc=""><bodyText><![CDATA[<div>
<?UMBRACO_MACRO modalpopup="0" chunkurl="" chunkname="article-left-menu" hide="0" chunkpath="devcenter/java" modaltrigger="" macroAlias="AzureChunkDisplayer" />
<h1>如何在 Windows Azure 的 Java 应用程序中使用 Twilio 发起电话呼叫</h1>
<p>以下示例演示了如何使用 Twilio 从 Windows Azure 中承载的网页发起呼叫。生成的应用程序将提示用户输入电话呼叫值，如以下屏幕快照中所示。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/java/wa_twiliojavacallform.jpg" alt="使用 Twilio 和 Java 的 Windows Azure 呼叫窗体"/></p>
<p>您将需要执行以下操作来使用本主题中的代码：</p>
<ol>
<li>获取 Twilio 帐户和身份验证令牌。若要开始使用 Twilio，请在 <a href="http://www.twilio.com/pricing">http://www.twilio.com/pricing</a> 上计算价格。您可以在 <a href="http://www.twilio.com/try-twilio">https://www.twilio.com/try-twilio</a> 上注册。有关 Twilio 提供的 API 的信息，请参阅 <a href="http://www.twilio.com/api">http://www.twilio.com/api</a>。</li>
<li>向 Twilio 验证您的电话号码是否为拨出呼叫 ID。有关如何验证电话号码的信息，请参阅 <a href="https://www.twilio.com/user/account/phone-numbers/verified#">https://www.twilio.com/user/account/phone-numbers/verified#</a>。作为使用现有号码的替代方法，您可以购买 Twilio 电话号码。在本示例中，将使用经验证的电话号码作为 callform.jsp（稍后介绍）的“From”（呼叫者）值。</li>
<li>获取 Twilio JAR。在 <a href="http://github.com/twilio/twilio-java">https://github.com/twilio/twilio-java</a> 上，您可以下载 GitHub 源并创建自己的 JAR，或者下载预建的 JAR（带有或不带依赖项）。本主题中的代码使用预建的 TwilioJava-3.3.8-with-dependencies JAR 编写。</li>
<li>将 JAR 添加到 Java 生成路径。</li>
<li>如果您使用 Eclipse 创建此 Java 应用程序，请使用 Eclipse 的部署程序集功能将 Twilio JAR 包含在您的应用程序部署文件 (WAR) 中。如果您不使用 Eclipse 创建此 Java 应用程序，请确保将 Twilio JAR 包含在与您的 Java 应用程序相同的 Azure 角色中，并将其添加到您的应用程序的类路径下。</li>
<li>确保 cacerts 密钥库包含带有 MD5 指纹 67:CB:9D:C0:13:24:8A:82:9B:B2:17:1E:D1:1B:EC:D4（序列号为 35:DE:F4:CF，SHA1 指纹为 D2:32:09:AD:23:D3:14:23:21:74:E4:0D:7F:9D:62:13:97:86:63:3A）的 Equifax 安全证书颁发机构证书。这是 <a href="http://api.twilio.com">https://api.twilio.com</a> 服务的证书颁发机构 (CA) 证书，在使用 Twilio API 时调用。有关将此 CA 证书添加到 JDK 的 cacert 存储的信息，请参阅<a href="/zh-cn/develop/java/common-tasks/add-a-certificate-to-ca-store">将证书添加到 Java CA 证书存储</a>。</li>
</ol>
<p>此外，如果您没有使用 Eclipse，则强烈建议熟悉<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/hh690944.aspx">使用 Azure Plugin for Eclipse with Java（由 Microsoft Open Technologies 提供）创建 Hello World 应用程序</a>中的信息或熟悉用于在 Windows Azure 中承载 Java 应用程序的其他方法。</p>
<h2>创建用于发起呼叫的 Web 窗体</h2>
<p>以下代码演示了如何创建 Web 窗体来检索用于发起呼叫的用户数据。在本示例中，将创建名为 <strong>TwilioCloud</strong> 的新的动态 Web 项目，并添加 <strong>callform.jsp</strong> 作为 JSP 文件。</p>
<pre class="prettyprint">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" %&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt;
&lt;title&gt;Automated call form&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
 &lt;p&gt;Fill in all fields and click &lt;b&gt;Make this call&lt;/b&gt;.&lt;/p&gt;
 &lt;br/&gt;
  &lt;form action="makecall.jsp" method="post"&gt;
   &lt;table&gt;
     &lt;tr&gt;
       &lt;td&gt;To:&lt;/td&gt;
       &lt;td&gt;&lt;input type="text" size=50 name="callTo" value="" /&gt;
       &lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
       &lt;td&gt;From:&lt;/td&gt;
       &lt;td&gt;&lt;input type="text" size=50 name="callFrom" value="" /&gt;
       &lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
       &lt;td&gt;Call message:&lt;/td&gt;
       &lt;td&gt;&lt;input type="text" size=400 name="callText" value="Hello. This is the call text. Good bye." /&gt;
       &lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
       &lt;td colspan=2&gt;&lt;input type="submit" value="Make this call" /&gt;
       &lt;/td&gt;
     &lt;/tr&gt;
   &lt;/table&gt;
 &lt;/form&gt;
 &lt;br/&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<h2>创建用于发起呼叫的代码</h2>
<p>以下代码在用户填写 callform.jsp 显示的窗体后调用，用于创建呼叫消息并生成呼叫。在本示例中，JSP 文件被命名为 <strong>makecall.jsp</strong> 并添加到 <strong>TwilioCloud</strong> 项目。（使用 Twilio 帐户和身份验证令牌，而不是分配给下面的代码中的 <strong>accountSID</strong> 和 <strong>authToken</strong> 的占位符值）。</p>
<pre class="prettyprint">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"
import="java.util.*"
import="com.twilio.*"
import="com.twilio.sdk.*"
import="com.twilio.sdk.resource.factory.*"
import="com.twilio.sdk.resource.instance.*"
pageEncoding="ISO-8859-1" %&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt;
&lt;title&gt;Call processing happens here&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;b&gt;This is my make call page.&lt;/b&gt;&lt;p/&gt;
 &lt;%
try 
{
     // Use your account SID and authentication token instead
     // of the placeholders shown here.
     String accountSID = "your_twilio_account";
     String authToken = "your_twilio_authentication_token";

     // Instantiate an instance of the Twilio client.     
     TwilioRestClient client;
     client = new TwilioRestClient(accountSID, authToken);

     // Retrieve the account, used later to retrieve the CallFactory.
     Account account = client.getAccount();

     // Display the client endpoint. 
     out.println("&lt;p&gt;Using Twilio endpoint " + client.getEndpoint() + ".&lt;/p&gt;");

     // Display the API version.
     String APIVERSION = TwilioRestClient.DEFAULT_VERSION;
     out.println("&lt;p&gt;Twilio client API version is " + APIVERSION + ".&lt;/p&gt;");

     // Retrieve the values entered by the user.
     String callTo = request.getParameter("callTo");  
     // The Outgoing Caller ID, used for the From parameter,
     // must have previously been verified with Twilio.
     String callFrom = request.getParameter("callFrom");
     String userText = request.getParameter("callText");

     // Replace spaces in the user's text with '%20', 
     // to make the text suitable for a URL.
     userText = userText.replace(" ", "%20");

     // Create a URL using the Twilio message and the user-entered text.
     String Url="http://twimlets.com/message";
     Url = Url + "?Message%5B0%5D=" + userText;

     // Display the message URL.
     out.println("&lt;p&gt;");
     out.println("The URL is " + Url);
     out.println("&lt;/p&gt;");

     // Place the call From, To and URL values into a hash map. 
     HashMap&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();
     params.put("From", callFrom);
     params.put("To", callTo);
     params.put("Url", Url);

     CallFactory callFactory = account.getCallFactory();
     Call call = callFactory.create(params);
     out.println("&lt;p&gt;Call status: " + call.getStatus()  + "&lt;/p&gt;"); 
} 
catch (TwilioRestException e) 
{
    out.println("&lt;p&gt;TwilioRestException encountered: " + e.getMessage() + "&lt;/p&gt;");
    out.println("&lt;p&gt;StackTrace: " + e.getStackTrace().toString() + "&lt;/p&gt;");
}
catch (Exception e) 
{
    out.println("&lt;p&gt;Exception encountered: " + e.getMessage() + "");
    out.println("&lt;p&gt;StackTrace: " + e.getStackTrace().toString() + "&lt;/p&gt;");
}
%&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p>除了发起呼叫外，makecall.jsp 还可显示 Twilio 终结点、API 版本和呼叫状态。如以下屏幕快照所示：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/java/wa_twiliojavamakecall.jpg" alt="使用 Twilio 和 Java 的 Windows Azure 呼叫响应"/></p>
<h2>运行应用程序</h2>
<p>下面是运行应用程序的概要步骤；这些步骤的详细信息可在<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/hh690944.aspx">使用 Azure Plugin for Eclipse with Java（由 Microsoft Open Technologies 提供）创建 Hello World 应用程序</a>上找到。</p>
<ol>
<li>将 TwilioCloud WAR 导出到 Windows Azure <strong>approot</strong> 文件夹。</li>
<li>修改 <strong>startup.cmd</strong> 以解压缩 TwilioCloud WAR。</li>
<li>针对计算仿真程序编译应用程序。</li>
<li>在计算仿真程序中启动部署。</li>
<li>打开浏览器，然后运行 <strong>http://localhost:8080/TwilioCloud/callform.jsp</strong>。</li>
<li>在窗体中输入值，单击“Make this call”（发起此呼叫），然后查看 makecall.jsp 中的结果。</li>
</ol>
<p>准备好部署到 Windows Azure 之后，针对云部署重新进行编译，然后部署到 Windows Azure，再在浏览器中运行 http://<em>your_hosted_name</em>.chinacloudapp.cn/TwilioCloud/callform.jsp（用您的值替换 <em>your_hosted_name</em>）。</p>
<h2>后续步骤</h2>
<p>提供此代码是为了向您演示在 Windows Azure 上通过 Java 使用 Twilio 的基本功能。在生产中部署到 Windows Azure 之前，您可能希望添加更多错误处理或其他功能。例如：</p>
<ul>
<li>您可以使用 Windows Azure 存储 Blob 或 SQL Database 存储电话号码和呼叫文本，而不是使用 Web 窗体。有关通过 Java 使用 Windows Azure Blob 存储 Blob 的信息，请参阅<a href="/zh-cn/develop/java/how-to-guides/blob-storage/">如何从 Java 使用 Windows Azure Blob 存储服务</a>。</li>
<li>您可以使用 <strong>RoleEnvironment.getConfigurationSettings</strong> 从部署的配置设置中检索 Twilio 帐户 ID 和身份验证令牌，而不用对 makecall.jsp 中的值进行硬编码。有关 <strong>RoleEnvironment</strong> 类的信息，请参阅<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/hh690948.aspx">在 JSP 中使用 Windows Azure 服务运行时库</a>和 <a href="http://dl.windowsazure.com/javadoc">http://dl.windowsazure.com/javadoc</a> 上的 Windows Azure 服务运行时程序包文档。</li>
<li>makecall.jsp 代码将 Twilio 提供的 URL <a href="http://twimlets.com/message">http://twimlets.com/message</a> 分配给 <strong>Url</strong> 变量。此 URL 提供了一个 Twilio 标记语言 (TwiML) 响应，指示 Twilio 如何继续进行呼叫。例如，返回的 TwiML 可能包含 <strong>&lt;Say&gt;</strong> 谓词，该谓词将生成与呼叫接收人的谈话的文本。您可以构建自己的服务来响应 Twilio 的请求，而不使用 Twilio 提供的 URL；有关详细信息，请参阅<a href="/zh-cn/develop/java/how-to-guides/twilio-voice-and-sms-service">如何通过 Java 使用 Twilio 实现语音和短信功能</a>。有关 TwiML 的更多信息可在 <a href="http://www.twilio.com/docs/api/twiml">http://www.twilio.com/docs/api/twiml</a> 上找到，有关 <strong>&lt;Say&gt;</strong> 和其他 Twilio 谓词的信息可在 <a href="http://www.twilio.com/docs/api/twiml/say">http://www.twilio.com/docs/api/twiml/say</a> 上找到。</li>
<li>阅读 <a href="http://www.twilio.com/docs/security">https://www.twilio.com/docs/security</a> 上的 Twilio 安全准则。</li>
</ul>
<p>有关 Twilio 的其他信息，请参阅 <a href="http://www.twilio.com/docs">https://www.twilio.com/docs</a>。</p>
<h2>另请参阅</h2>
<ul>
<li><a href="/zh-cn/develop/java/how-to-guides/twilio-voice-and-sms-service">如何通过 Java 使用 Twilio 实现语音和短信功能</a></li>
<li><a href="/zh-cn/develop/java/common-tasks/add-a-certificate-to-ca-store">将证书添加到 Java CA 证书存储</a></li>
</ul>
</div>]]></bodyText><umbracoNaviHide>1</umbracoNaviHide><pageTitle>如何从 Twilio (Java) 发起电话呼叫 - Windows Azure</pageTitle><localize>1</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>develop-java-how-to-twilio-phone-call</linkid><metaKeywords>Azure Twilio 呼叫, Twilio 呼叫网站, Azure Twilio Java</metaKeywords><metaDescription><![CDATA[了解如何在 Windows Azure 的 Java 应用程序中使用 Twilio 从网页发起电话呼叫。]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>如何通过 Java 从 Twilio 发起电话呼叫</urlDisplayName><disqusComments>1</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate>dynamic-leftnav</pageTemplate></TextpageLeftNav></localize>