<?xml version="1.0" encoding="UTF-8"?>
<localize><umbTextpage id="19167" parentID="19159" level="4" writerID="52" creatorID="94" nodeType="1059" template="1052" sortOrder="8" createDate="2013-07-11T11:51:08" updateDate="2014-08-18T11:22:52" nodeName="HOL-NodejsAzureWebSites-OSX" urlName="hol-nodejsazurewebsites-osx" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,19159,19167" isDoc=""><bodyText><![CDATA[<div>
<?UMBRACO_MACRO chunkpath="devcenter/trainingkit" hide="0" chunkname="article-left-menu" macroAlias="AzureChunkDisplayer" />
<h1>使用 Windows Azure 网站构建并发布 Node.js 应用程序 (OS X)</h1>
<h3><a href="http://www.contentinstaller.net/Install/Content/LAB_NodejsAzureWebSites-OSX">下载实验资产</a>/<a href="https://github.com/WindowsAzure-TrainingKit/HOL-NodejsAzureWebSites-OSX/fork_select">在 Github 上执行自我复制</a>/<a href="https://github.com/WindowsAzure-TrainingKit/HOL-NodejsAzureWebSites-OSX/issues">报告问题</a></h3>
<a name="Overview"></a>
<h2>概述</h2>
<a name="Objectives"></a>
<p>在本动手实验中，您将了解适用于 Node.js 应用程序的 Windows Azure 网站服务的基础知识。在练习 1 中，您将了解如何使用 Windows Azure 门户创建网站，然后使用 GIT 发布“Hello World”Node.js 应用程序。在练习 2 中，您将了解如何使用 Windows Azure 命令行工具发布应用程序。</p>
<h3>目标</h3>
<p>在本动手实验中，您将了解如何使用以下工具创建并发布 Node.js 应用程序：</p>
<ul>
<li>Git</li>
<li>适用于 Mac 和 Linux 的 Windows Azure 命令行工具</li>
</ul>
<a name="Prerequisites"></a>
<h3>必备组件</h3>
<p>完成本动手实验需要以下各项：</p>
<ul>
<li><a href="http://git-scm.com/">Git 版本控制系统</a></li>
<li><a href="http://nodejs.org/#download">Node.js</a></li>
<li>
<p><a href="http://www.windowsazure.cn/zh-cn/develop/nodejs/how-to-guides/command-line-tools/">适用于 Mac 和 Linux 的 Windows Azure 命令行工具</a>（仅限练习 2）</p>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong> 如果您尚未安装适用于 Mac 和 Linux 的 Windows Azure 命令行工具，请打开终端并运行以下命令：</p>
<p>通过使用 -g，Windows Azure 命令行工具将全局安装到您的计算机上。这意味着，您将能够从任何位置执行 azure 命令。</p>
</div>
</li>
</ul>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong> 本实验设计为使用 OS X 操作系统。</p>
</div>
<a name="Exercises"></a>
<h2>练习</h2>
<p>本动手实验包括以下练习：</p>
<ol>
<li><a href="#Exercise1">使用 GIT 构建并发布 Node.js 网站</a></li>
<li><a href="#Exercise2">使用命令行工具构建并发布 Node.js 网站</a></li>
</ol><a name="Exercise1"></a>
<h3>练习 1：使用 GIT 构建并发布 Node.js 网站</h3>
<p>在第一个练习中，您将从 Windows Azure 门户创建新网站，创建“Hello World”Node.js 应用程序，最后利用 Windows Azure 提供的新 GIT 发布功能发布它。</p>
<a name="Ex1Task1"></a>
<p><strong>任务 1 – 创建托管在 Windows Azure 中的新网站</strong></p>
<ol>
<li>
<p>转到 <a href="https://manage.windowsazure.cn/">Windows Azure 门户</a><strong>Windows Azure 门户</strong>，并使用与您的订阅关联的 <strong>Microsoft 帐户</strong>凭据登录。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/log-in-into-windows-azure-portal.png" alt="登录到 Windows Azure 门户"/></p>
<p><em>登录到 Windows Azure 门户</em></p>
</li>
<li>
<p>在 Windows Azure 门户主页中，单击位于底部栏上的“新建”<strong></strong>按钮。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/creating-a-new-web-site.png" alt="创建新的网站"/></p>
<p><em>创建新的网站</em></p>
</li>
<li>
<p>单击“网站”|“快速创建”<strong></strong>。为新网站提供可用的 URL，选择区域，然后单击“创建网站”<strong></strong>。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/creating-a-new-web-site-using-quick-create-op.png" alt="使用“快速创建”选项创建新网站"/></p>
<p><em>使用“快速创建”选项创建新网站</em></p>
</li>
<li>
<p>等到新网站创建完毕。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/creating-new-web-site-status.png" alt="创建新网站状态"/></p>
<p><em>创建新网站状态</em></p>
</li>
<li>
<p>在创建网站后，单击“URL”<strong></strong>链接来检查新网站是否正在运行。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/browsing-to-new-site.png" alt="浏览到新网站"/></p>
<p><em>浏览到新网站</em></p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/web-site-running.png" alt="网站正在运行"/></p>
<p><em>网站正在运行</em></p>
</li>
<li>
<p>返回到门户，然后单击网站名称列来转到网站的仪表板。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/selecting-the-dashboard-tab.png" alt="选择“仪表板”选项卡"/></p>
<p><em>选择“仪表板”选项卡</em></p>
</li>
<li>
<p>单击“设置 Git 发布”<strong></strong>链接。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/setting-up-git-publishing.png" alt="设置 Git 发布"/></p>
<p><em>设置 Git 发布</em></p>
</li>
<li>
<p>等待几秒钟，直到 Git 存储库就绪。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/git-repository-created.png" alt="已创建 Git 存储库"/></p>
<p><em>已创建 Git 存储库</em></p>
</li>
<li>
<p>不要关闭门户。</p>
</li>
</ol><a name="Ex1Task2"></a>
<p><strong>任务 2 - 创建新的 Node.js 网站</strong></p>
<ol>
<li>
<p>在可轻松访问的位置创建新文件夹。</p>
</li>
<li>
<p>打开您喜欢的文本编辑器，并复制以下代码，这些代码会将字符串 <em>Hello World</em> 发送到浏览器。将此文件作为 <strong>server.js</strong> 保存到您先前创建的文件夹中。</p>
<pre class="prettyprint">var http = require('http'); var port = process.env.port || 1337; http.createServer(function (req, res) {                   res.writeHead(200, { 'Content-Type': 'text/plain' });                   res.end('Hello World\n'); }).listen(port);</pre>
</li>
<li>
<p>创建新的文本文件并粘贴以下代码。将此文件作为 <strong>package.json</strong> 保存到同一文件夹中。</p>
<pre class="prettyprint">{   "name": "HelloWorld",   "version": "0.0.1",   "description": "",   "main": "./server.js",   "engines": { "node": "&gt;= 0.6.0" } }</pre>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong>package.json 文件告知 Node.js 包管理器 (npm) 如何构建您的包以及哪些是模块依赖项。由于此应用程序非常简单，它无需依赖项，但在更复杂的应用程序中，您可能将需要指定“dependencies”属性。在使用 Git 发布应用程序时，Windows Azure 平台会自动安装此文件中声明的所有依赖项。</p>
</div>
</li>
<li>
<p>在文本编辑器中，创建一个新文件并粘贴以下代码。此配置指示 <strong>server.js</strong> 文件是应由 <strong>iisnode</strong> 模块处理的 Node.js 应用程序。</p>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong><a href="https://github.com/tjanczuk/iisnode">iisnode</a> 项目提供了允许在 IIS 7.x 中托管 node.js 应用程序的本机 IIS 7.x 模块。</p>
</div>
<pre class="prettyprint">&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;configuration&gt;     &lt;system.webServer&gt;           &lt;modules runAllManagedModulesForAllRequests="false" /&gt;        &amp;lt;!-- indicates that the server.js file is a node.js application          to be handled by the iisnode module --&amp;gt;       &amp;lt;handlers&amp;gt;         &amp;lt;add name="iisnode" path="server.js" verb="*" modules="iisnode" /&amp;gt;       &amp;lt;/handlers&amp;gt;       &amp;lt;rewrite&amp;gt;         &amp;lt;rules&amp;gt;           &amp;lt;clear /&amp;gt;           &amp;lt;rule name="app" enabled="true" patternSyntax="ECMAScript" stopProcessing="true"&amp;gt;             &amp;lt;match url="server\.js.+" negate="true" /&amp;gt;             &amp;lt;conditions logicalGrouping="MatchAll" trackAllCaptures="false" /&amp;gt;             &amp;lt;action type="Rewrite" url="server.js" /&amp;gt;           &amp;lt;/rule&amp;gt;         &amp;lt;/rules&amp;gt;       &amp;lt;/rewrite&amp;gt; &amp;lt;/system.webServer&amp;gt;   &lt;/configuration&gt;</pre>
</li>
<li>
<p>将此文件作为 <strong>web.config</strong> 保存到您的网站文件夹中。</p>
</li>
</ol><a name="Ex1Task3"></a>
<p><strong>任务 3 – 使用 Git 发布 Node.js 应用程序</strong></p>
<ol>
<li>
<p>返回到门户。打开网站的<strong>仪表板</strong>，并复制页面底部的“Git 克隆 URL”<strong></strong>值。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/git-clone-url.png" alt="Git 克隆 URL"/></p>
<p><em>复制 Git 克隆 URL</em></p>
</li>
<li>
<p>若要发布您的本地文件，请打开 <strong>Terminal </strong>控制台，将目录更改为您的应用程序文件夹，然后运行以下命令。</p>
<pre class="prettyprint">git init git add . git commit -m "initial commit"</pre>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong> 您可以在 http://git-scm.com/documentation 中了解有关 Git 命令的更多信息。</p>
</div>
</li>
<li>
<p>若要添加远程 Windows Azure 存储库并推送文件，请运行以下命令。使用从门户获取的值替换 <em>{Git Clone Url}</em> 占位符。</p>
<pre class="prettyprint">git remote add azure {Git Clone Url} git push azure master</pre>
</li>
<li>
<p>在出现提示时，输入部署凭据。</p>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong>部署凭据不同于与您的 Windows Azure 订阅关联的 <strong>Microsoft 帐户</strong>，并且可用于与您的订阅关联的所有 Windows Azure 网站。如果您不知道您的部署凭据，则可以使用管理门户轻松地重置它们。打开网站的“仪表板”<strong></strong>页，单击“重置部署凭据”<strong></strong>链接。提供新密码并单击“确定”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/deployment-credentials.png" alt="重置部署凭据"/></p>
<p><em>重置部署凭据</em></p>
</div>
</li>
<li>
<p>转到网站的<strong>仪表板</strong>，然后单击“站点 URL”<strong></strong>链接来确保网站正在运行。将显示“Hello Word”<em></em>消息。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/running-the-nodejs-application.png" alt="运行 Node.js 应用程序"/></p>
<p><em>运行 Node.js 应用程序</em></p>
</li>
</ol><a name="Exercise2"></a>
<h3>练习 2：使用命令行工具构建并发布 Node.js 网站</h3>
<p>在此练习中，您将了解如何使用适用于 Mac 和 Linux 的 Windows Azure 命令行工具管理网站。</p>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong> 这些步骤假定您已安装适用于 Mac 和 Linux 的 Windows Azure 命令行工具。</p>
</div>
<ol>
<li>
<p>打开 <strong>Terminal </strong>控制台并执行以下命令，以下载您的帐户的<strong>发布设置</strong>文件。新的浏览器窗口将弹出。使用与您的 Windows Azure 订阅关联的 <strong>Microsoft 帐户</strong>凭据登录。</p>
<pre class="prettyprint">azure account download</pre>
<p>您的发布设置将下载到您的浏览器的默认下载文件夹（通常为 ~/Downloads）中，并且将显示一个包含相关信息的新页面。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/download-publishsettings.png" alt="下载发布设置文件"/></p>
<p><em>下载发布设置文件</em></p>
</li>
<li>
<p>返回到 <strong>Terminal </strong>控制台，然后通过运行以下命令并在 <em>{publish</em>settings<em>file}</em> 占位符中指定<strong>发布设置</strong>文件位置，来导入在上一步中下载的文件。</p>
<pre class="prettyprint">azure account import {publish_settings_file}</pre>
</li>
<li>
<p>执行<a href="#Ex1Task2">练习 1 中的任务 2</a> 来创建 Node.js 网站，但将文件置于不同文件夹中。</p>
</li>
<li>
<p>返回到<strong> Terminal </strong>控制台并更改目录，以转到在其中放置了这些文件的文件夹。</p>
</li>
<li>
<p>运行以下命令来创建启用了 <strong>GIT 发布</strong>功能的 Windows Azure 网站。</p>
<pre class="prettyprint">azure site create --git</pre>
<p>在出现提示时提供网站名称，例如 <strong>nodejsappOSXcli</strong>。然后选择区域并继续。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/new-web-site-cli.png" alt="创建新网站并启用 GIT 发布"/></p>
<p><em>创建新网站并启用 GIT 发布</em></p>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong>通过在运行命令 <strong>site create</strong> 时指定 <strong>--git</strong>，您无需运行其他命令即可初始化 Git 存储库或添加 git 远程，因为这两项任务将由 Windows Azure 命令行工具自动完成。</p>
</div>
</li>
<li>
<p>现在，您将把应用程序文件添加到 Git 存储库中并将它们推送到 Windows Azure 网站。为此，请返回到命令提示符并执行以下命令。在出现提示时，提供您的部署凭据。</p>
<pre class="prettyprint">git add . git commit -m "initial commit" git push azure master</pre>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/push-site.png" alt="推送网站文件"/></p>
<p><em>推送网站文件</em></p>
<div class="dev-callout"><strong>注意</strong>
<p><strong>注意：</strong>部署凭据不同于与您的 Windows Azure 订阅关联的 <strong>Microsoft 帐户</strong>，并且可用于与您的订阅关联的所有 Windows Azure 网站。如果您不知道您的部署凭据，则可以使用管理门户轻松地重置它们。打开网站的“仪表板”<strong></strong>页，单击“重置部署凭据”<strong></strong>链接。提供新密码并单击“确定”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/deployment-credentials.png" alt="重置部署凭据"/></p>
<p><em>重置部署凭据</em></p>
</div>
</li>
<li>
<p>运行以下命令来在 Windows Azure 门户中打开您的网站的已发布部署。</p>
<pre class="prettyprint">azure site portal</pre>
<p>在 Windows Azure 门户中，从列表中选择您的网站并打开网站的“部署”<strong></strong>页。检查最新部署。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/site-deployments.png" alt="网站部署"/></p>
<p><em>网站部署</em></p>
</li>
<li>
<p>执行以下命令以浏览到已发布的网站并确保它正在运行。</p>
<pre class="prettyprint">azure site browse</pre>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/training-kit/hol-nodejsazurewebsites-osx/images/website-working-cli.png" alt="网站正在运行"/></p>
<p><em>网站正在运行</em></p>
</li>
</ol></div>]]></bodyText><umbracoNaviHide>1</umbracoNaviHide><pageTitle>Node.js 和 Windows Azure 网站 (OSX) – Windows Azure HOL</pageTitle><metaKeywords>Nodejs, OSX, Windows Azure Nodejs, Windows Azure, 跨平台, 网站</metaKeywords><metaDescription><![CDATA[在本动手实验中，您将了解适用于 Node.js 应用程序的 Windows Azure 网站服务的基础知识。]]></metaDescription><linkid>Devlop-trainingkit-HOL-NodejsAzureWebSites-OSX</linkid><urlDisplayName>Node.js 和 Windows Azure 网站 (OSX)</urlDisplayName><headerExpose></headerExpose><footerExpose></footerExpose><disqusComments>1</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate>dynamic-leftnav</pageTemplate><localize>1</localize><localizePartial>0</localizePartial><sitemapHide></sitemapHide><headerText><![CDATA[]]></headerText></umbTextpage></localize>