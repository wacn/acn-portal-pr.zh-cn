<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="18981" parentID="18978" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="3" createDate="2013-07-11T11:13:50" updateDate="2014-08-18T11:16:18" nodeName="Enable SSL Worker Role" urlName="enable-ssl-worker-role" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,17380,18978,18981" isDoc=""><bodyText><![CDATA[<div>
<?UMBRACO_MACRO modalpopup="0" chunkurl="" chunkname="article-left-menu" hide="0" chunkpath="devcenter/node" modaltrigger="" macroAlias="AzureChunkDisplayer" />
<h1>在 Windows Azure 辅助角色中为 Node.js 应用程序配置 SSL</h1>
<p>安全套接字层 (SSL) 加密是用于保护通过 Internet 发送的数据的最常见方法。此常见任务讨论如何为辅助角色中以 Windows Azure 云服务形式托管的 Node.js 应用程序指定 HTTPS 终结点。</p>
<div class="dev-callout">注意
<p>本文中的步骤仅适用于辅助角色中以 Windows Azure 云服务形式托管的 Node 应用程序。</p>
</div>
<p>此任务包括下列步骤：</p>
<ul>
<li><a href="#step1">步骤 1：创建 Node.js 服务并将该服务发布到云</a></li>
<li><a href="#step2">步骤 2：获取 SSL 证书</a></li>
<li><a href="#step3">步骤 3：将应用程序修改为使用 SSL 证书</a></li>
<li><a href="#step4">步骤 4：修改服务定义文件</a></li>
<li><a href="#step5">步骤 5：使用 HTTPS 连接到角色实例</a></li>
</ul>
<h2><a name="step1"></a>步骤 1：创建 Node.js 服务并将该服务发布到云</h2>
<p>您可以采用以下步骤通过 Windows Azure PowerShell 创建一个简单的 Node.js“hello world”服务：</p>
<ol>
<li>
<p>从“开始”菜单或“开始”屏幕，搜索“Windows Azure PowerShell”。最后，右键单击“Windows Azure PowerShell”并选择“以管理员身份运行”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/azure-powershell-start.png" alt="Windows Azure PowerShell 图标"/></p>
<?UMBRACO_MACRO hide="0" chunkpath="devcenter/node" chunkname="install-dev-tools" macroAlias="AzureChunkDisplayer" />
</li>
<li>
<p>使用 <strong>New-AzureServiceProject</strong> cmdlet 创建新服务。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-01.png"/></p>
</li>
<li>
<p>使用 <strong>Add-AzureNodeWorkerRole</strong> cmdlet 向您的服务中添加辅助角色。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-02-worker.png"/></p>
</li>
<li>
<p>使用 <strong>Publish-AzureServiceProject</strong> cmdlet 将您的服务发布到云。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-03-worker.png"/></p>
<div class="dev-callout"><strong>注意</strong>
<p>如果您以前未导入 Windows Azure 订阅的发布设置，则在尝试发布时会收到错误。有关下载和导入订阅发布设置的信息，请参阅<a href="/zh-cn/develop/nodejs/how-to-guides/powershell-cmdlets/#ImportPubSettings">如何对 Node.js 使用 Windows Azure PowerShell</a></p>
</div>
</li>
</ol>
<p><strong>Publish-AzureServiceProject</strong> cmdlet 返回的“创建的网站 URL”值包含您的托管应用程序的完全限定域名。您将需要为此特定完全限定域名获取一个 SSL 证书，并将其部署到 Windows Azure。</p>
<h2><a name="step2"></a>步骤 2：获取 SSL 证书</h2>
<p>若要为应用程序配置 SSL，您首先需要获取已由证书颁发机构 (CA)（出于此目的颁发证书的受信任的第三方）签署的 SSL 证书。如果您尚未获取 SSL 证书，则需要从销售 SSL 证书的公司购买一个 SSL 证书。</p>
<p>该证书必须满足 Windows Azure 中的以下 SSL 证书要求：</p>
<ul>
<li>证书必须包含私钥。</li>
<li>必须为密钥交换创建证书（<strong>.pfx</strong> 文件）。</li>
<li>证书的使用者名称必须与用于访问云服务的域匹配。由于您无法为 chinacloudapp.cn 域获取 SSL 证书，因此，该证书的使用者名称必须与用于访问应用程序的自定义域名匹配。例如 <strong>mysecuresite.chinacloudapp.cn</strong>。</li>
<li>该证书必须使用至少 2048 位加密。</li>
</ul>
<p>包含证书的 <strong>.pfx</strong> 文件将添加到您的服务项目中，并在以下步骤中部署到 Windows Azure。</p>
<h2><a name="step3"></a>步骤 3：将应用程序修改为使用 SSL 证书</h2>
<p>将 Node.js 应用程序部署到辅助角色后，服务器证书和 SSL 连接将由 Node.exe 进行管理。若要处理 SSL 通信，必须使用“https”模块，而不是“http”。执行以下步骤将 SSL 证书添加到您的项目，然后将应用程序修改为使用该证书。</p>
<ol>
<li>
<p>将证书颁发机构 (CA) 提供给您的 <strong>.pfx</strong> 文件保存到包含您的应用程序的目录。例如，<strong>c:\node\securesite\workerrole1</strong> 是包含本文中使用的应用程序的目录。</p>
</li>
<li>
<p>使用 Notepad.exe 打开 <strong>c:\node\securesite\workerrole1\server.js</strong> 文件，并将文件内容替换为以下内容：</p>
<pre class="prettyprint">var https = require('https');
var fs = require('fs');


var options = {
    pfx: fs.readFileSync('certificate.pfx'),
    passphrase: "password"
};
var port = process.env.PORT || 8000;
https.createServer(options, function (req, res) {
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end('Hello World\n');
}).listen(port);</pre>
<div class="dev-callout"><strong>注意</strong>
<p>必须将“certificate.pfx”替换为证书的名称，并将“password”替换为证书文件的密码（如果有）。</p>
</div>
</li>
<li>
<p>保存 <strong>server.js</strong> 文件。</p>
</li>
</ol>
<p>对 <strong>server.js</strong> 文件进行修改会导致在将应用程序部署到 Windows Azure 时，该程序会侦听端口 443（SSL 通信的标准端口）上的通信。该 <strong>.pfx</strong> 文件将用于实施此传输上的 SSL 通信。</p>
<h2><a name="step4"></a>步骤 4：修改服务定义文件</h2>
<p>您的应用程序现在侦听端口 443 上的通信，所以您还必须修改服务定义，以允许通过此端口进行通信。</p>
<ol>
<li>
<p>在服务目录中，打开服务定义文件 (<strong>ServiceDefinition.csdef</strong>)，更新 <strong>Endpoints</strong> 部分中的 http <strong>InputEndpoint</strong> 元素，以允许通过端口 443 进行通信：</p>
<pre class="prettyprint">&lt;WorkerRole name="WorkerRole1" vmsize="Small"&gt;
...
    &lt;Endpoints&gt;
        &lt;InputEndpoint name="HttpIn" protocol="tcp" 
            port="443" /&gt;
    &lt;/Endpoints&gt;
...
&lt;/WorkerRole&gt;</pre>
<p>进行此更改后，请保存 <strong>ServiceDefinition.csdef</strong> 文件。</p>
</li>
<li>
<p>通过再次发布服务在云中刷新更新的配置。在 Windows Azure PowerShell 提示符下，从服务目录中键入 <strong>Publish-AzureServiceProject</strong>。</p>
</li>
</ol>
<h2><a name="step5"></a>步骤 5：使用 HTTPS 连接到角色实例</h2>
<p>现在，您的部署已在 Windows Azure 中启用并运行，您可以使用 HTTPS 连接到该部署。</p>
<ol>
<li>
<p>在管理门户中，选择您的云服务，然后单击“仪表板”。</p>
</li>
<li>
<p>向下滚动并单击显示为“站点 URL”的链接：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/site-url.png" alt="站点 url"/></p>
<div class="dev-callout"><strong>注意</strong>
<p>如果门户中显示的站点 URL 未指定 HTTPS，则必须使用 HTTPS（而不是 HTTP）在浏览器中手动输入 URL。</p>
</div>
</li>
<li>
<p>此时将打开新浏览器并显示您的网站。</p>
<p>该浏览器会显示一个锁状图标，指示它使用的是 HTTPS 连接。它还指示已为您的应用程序正确配置 SSL。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-08.png"/></p>
</li>
</ol>
<h2>其他资源</h2>
<p><a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/gg465718.aspx">如何将证书与服务关联</a></p>
<p><a href="/zh-cn/develop/nodejs/common-tasks/enable-ssl/">在 Windows Azure Web 角色中为 Node.js 应用程序配置 SSL</a></p>
<p><a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/ff795779.aspx">如何在 HTTPS 终结点上配置 SSL 证书</a></p>
</div>]]></bodyText><umbracoNaviHide>1</umbracoNaviHide><pageTitle>为云服务 (Node.js) 辅助角色配置 SSL</pageTitle><localize>1</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>dev-nodejs-enablesslworker</linkid><metaKeywords>Node.js Azure SSL, Node.js Azure, SSL 辅助角色</metaKeywords><metaDescription><![CDATA[]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>启用 SSL 辅助角色</urlDisplayName><disqusComments>1</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate>dynamic-leftnav</pageTemplate></TextpageLeftNav></localize>