<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="19151" parentID="19145" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="6" createDate="2013-07-11T11:46:52" updateDate="2014-08-18T11:22:13" nodeName="IPython Notebook" urlName="ipython-notebook" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,18397,19145,19151" isDoc=""><bodyText><![CDATA[<div><!--?UMBRACO_MACRO chunkpath="devcenter/python" hide="0" chunkname="article-left-menu" macroAlias="AzureChunkDisplayer" ?-->
<h1>Windows Azure 上的 IPython Notebook</h1>
<div class="dev-onpage-video-clear clearfix">
<div class="dev-onpage-left-content">
<p><a href="http://ipython.org">IPython 项目</a>提供了用于科学计算的工具集合，其中包括强大的交互式外壳、高性能且易于使用的并行库以及称为 IPython Notebook 的基于 Web 的环境。Notebook 为将代码执行与实时计算文档的创建组合起来的交互式计算提供了工作环境。这些 Notebook 文件可以包含任意文本、数学公式、输入代码、结果、图形、视频以及新型 Web 浏览器能够显示的任何其他种类的媒体。</p>
</div>
<div class="dev-onpage-video-wrapper"><a href="http://go.microsoft.com/fwlink/?LinkID=254535&amp;clcid=0x409" target="_blank" class="label">观看教程</a> <a style="background-image: url('/media/devcenter/python/ipy-youtube2.png') !important;" href="http://go.microsoft.com/fwlink/?LinkID=254535&amp;clcid=0x409" target="_blank" class="dev-onpage-video"> <span class="icon">播放视频</span> </a> <span class="time">5:22</span></div>
</div>
<p>无论您是第一次使用 Python 并希望在有趣的交互式环境中了解它，还是执行一些严格的并行/技术计算，IPython Notebook 都是一个很好的选择。为说明其各项功能，下面的屏幕快照显示了与 SciPy 和 matplotlib 包结合使用来分析录音结构的 IPython Notebook：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-spectral.png" alt="屏幕快照"/></p>
<p>本文档将演示如何使用 Linux 或 Windows 虚拟机 (VM) 在 Windows Azure 上部署 IPython Notebook。通过在 Windows Azure 上使用 IPython Notebook，您可以轻松地为具有 Python 的所有功能及其许多库的可缩放计算资源提供可通过 Web 访问的接口。由于所有安装都是在云中进行的，因此用户可以访问这些资源，而无需除最新 Web 浏览器以外的任何其他本地配置。</p>
<!--?UMBRACO_MACRO chunkpath="devcenter/shared" hide="0" chunkname="create-account-and-vms-note" macroAlias="AzureChunkDisplayer" ?-->
<h2>在 Windows Azure 上创建并配置 VM</h2>
<p>第一步是创建在 Windows Azure 上运行的虚拟机 (VM)。此 VM 是云中的完整操作系统，它将用于运行 IPython Notebook。Windows Azure 能够同时运行 Linux 和 Windows 虚拟机，我们将介绍如何在这两种类型的虚拟机上设置 IPython。</p>
<h3>Linux VM</h3>
<p>若要创建 Linux VM，请单击 Windows Azure 管理门户左下角的“新建”图标，然后从选项列表中选择“虚拟机”。对于我们的 Linux VM，我们将使用 OpenSUSE，在下面的“VM OS 选择”对话框的屏幕快照中可以看到选择了它。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-azure-linux-001.png" alt="屏幕快照"/></p>
<p>在下一个配置屏幕上，为 VM 命名 (<code>ipython-demo</code>)，选择管理员用户名 (<code>ipadmin</code>) 和密码。使用此用户，我们稍后将能够通过 SSH 进入 VM 来安装 IPython。这显示在“VM 配置”对话框中：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-azure-linux-002.png" alt="屏幕快照"/></p>
<p>接下来，在“VM 模式”对话框中，使用默认选项，但为 VM 提供公共 DNS 名称，我们已选择它为 <code>ipython-demo</code>：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-azure-linux-003.png" alt="屏幕快照"/></p>
<p>通过此选择，实例将作为 <code>ipython-demo.chinacloudapp.cn</code> 联机提供。在 VM 启动后，将显示仪表板，如下所示：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-azure-linux-004.png" alt="屏幕快照"/></p>
<h3>Windows VM</h3>
<p>Windows VM 的创建过程与上述 Linux VM 的创建过程几乎相同。第一个主要区别在“虚拟机操作系统选择”对话框中，我们在其中选择“Windows Server 2008 R2 SP1, March 2012”，如下面的屏幕快照中所示：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-azure-win-001.jpg" alt="屏幕快照"/></p>
<p>这之后，按照上面针对 Linux 的相同步骤操作。</p>
<p>唯一的另一个区别是您将如何连接到 VM。不使用 SSH，您将使用 Microsoft 的远程桌面应用程序。幸运的是，Windows Azure 管理门户提供了 <code>.rdp</code> 文件，其中包含用于连接到 VM 的连接信息。若要下载此文件，请单击 VM 仪表板底部的“连接”链接。在下载 <code>.rdp</code> 文件后，只需在远程桌面中打开它即可连接到 VM。</p>
<h2>为 IPython Notebook 创建终结点</h2>
<p>此步骤同时适用于 Linux 和 Windows VM。稍后，我们将配置 IPython 以在端口 9999 上运行其 Notebook 服务器。若要使此端口可公用，我们必须在 Windows Azure 管理门户中创建终结点。此终结点在 Windows Azure 防火墙中打开一个端口并将公用端口（HTTPS，443）映射到 VM 上的专用端口 (9999)。</p>
<p>若要创建终结点，请转到 VM 仪表板，单击“终结点”，再单击“添加终结点”，然后创建新终结点（在此示例中称为 <code>ipython_nb</code>）。为协议选取 TCP，为公用端口选取 443，并为专用端口选取 9999：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-azure-linux-005.png" alt="屏幕快照"/></p>
<p>在此步骤后，“终结点”仪表板选项卡将如下所示：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-azure-linux-006.png" alt="屏幕快照"/></p>
<h2>在 VM 上安装必需软件</h2>
<p>若要在我们的 VM 上运行 IPython Notebook，必须首先安装 IPython 及其依赖项。</p>
<h3>Linux</h3>
<p>若要安装 IPython 及其依赖项，请通过 SSH 进入 Linux VM 并执行以下步骤。</p>
<ol>
<li>
<p>通过执行以下命令，安装 <a href="http://www.numpy.org/" title="NumPy">NumPy</a>、<a href="http://matplotlib.sourceforge.net/" title="Matplotlib">Matplotlib</a>、<a href="http://www.tornadoweb.org/" title="Tornado">Tornado</a> 以及 IPython 的其他依赖项：</p>
<pre class="prettyprint">sudo zypper install python-matplotlib
sudo zypper install python-tornado
sudo zypper install ipython</pre>
</li>
<li>
<p>通过执行以下命令，下载并安装最新版本的 IPython：</p>
<pre class="prettyprint">sudo easy_install http://github.com/ipython/ipython/tarball/master</pre>
</li>
</ol>
<h3>Windows</h3>
<p>若要在 Windows VM 上安装 IPython 及其依赖项，请使用 <code>.rdp</code> 文件和远程桌面来连接到 VM。然后执行以下步骤，使用 Windows PowerShell 运行所有命令行操作。</p>
<ol>
<li>
<p>从 http://python.org 安装 Python 2.7.2（32 位）。您还需要将 <code>C:\Python27</code> 和 <code>C:\Python27\Scripts</code> 添加到您的 <code>PATH</code> 环境变量中。</p>
</li>
<li>
<p>通过下载文件 http://python-distribute.org/distribute_setup.py，然后运行以下命令来安装分发包：</p>
<pre class="prettyprint">python distribute_setup.py</pre>
</li>
<li>
<p>通过运行以下命令来安装 <a href="http://www.tornadoweb.org/" title="Tornado">Tornado</a> 和 <a href="https://github.com/zeromq/pyzmq" title="PyZMQ">PyZMQ</a>：</p>
<pre class="prettyprint">easy_install tornado
easy_install pyzmq</pre>
</li>
<li>
<p>使用各自网站上提供的 <code>.exe</code> 二进制安装程序，下载并安装 <a href="http://www.numpy.org/" title="NumPy">NumPy</a> 和 <a href="http://matplotlib.sourceforge.net/" title="Matplotlib">Matplotlib</a>。</p>
</li>
<li>
<p>下载并安装 OpenSSL。您将需要从 http://slproweb.com/products/Win32OpenSSL.html 同时安装“Win32 OpenSSL v1.0.1c Light”和“Visual C++ 2008 Redistributable”。您还将需要将 <code>C:\OpenSSL-Win32\bin</code> 添加到您的 <code>PATH</code> 环境变量中。</p>
</li>
<li>
<p>通过执行以下命令，下载并安装最新版本的 IPython：</p>
<pre class="prettyprint">easy_install http://github.com/ipython/ipython/tarball/master</pre>
</li>
</ol>
<h3>配置 IPython Notebook</h3>
<p>接下来，我们配置 IPython Notebook。第一步是创建自定义 IPython 配置文件以封装配置信息：</p>
<pre class="prettyprint">ipython profile create nbserver</pre>
<p>然后，通过 <code>cd</code> 进入配置文件目录来创建 SSL 证书并编辑配置文件。</p>
<p>在 Linux 上：</p>
<pre class="prettyprint">cd ~/.config/ipython/profile_nbserver/</pre>
<p>在 Windows 上：</p>
<pre class="prettyprint">cd ~\.ipython\profile_nbserver</pre>
<p>在这两个平台上，按如下所示创建 SSL 证书：</p>
<pre class="prettyprint">openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem</pre>
<p>请注意，由于我们创建的是自签名 SSL 证书，因此在连接到 Notebook 时，您的浏览器将显示安全警告。若要进行长期生产使用，您将需要使用与您的组织关联的正确签名的证书。由于证书管理超出了本演示的范围，我们目前将只讨论自签名证书。</p>
<p>除了使用证书外，您还必须提供密码以确保您的 Notebook 免遭未授权使用。出于安全原因，IPython 在其配置文件中使用加密密码，因此您将首先需要加密您的密码。IPython 提供了一个实用工具来执行此操作；在命令提示符处，运行：</p>
<pre class="prettyprint">python -c "import IPython;print IPython.lib.passwd()"</pre>
<p>这会提示您提供密码并确认，然后将输出密码，如下所示：</p>
<pre class="prettyprint">Enter password: 
Verify password: 
sha1:b86e933199ad:a02e9592e59723da722.. (elided the rest for security)</pre>
<p>接下来，我们将编辑配置文件，它是您所在的配置文件目录中的 <code>ipython_notebook_config.py</code> 文件。此文件具有许多字段，并且默认情况下注释掉所有字段。您可以使用您喜欢的任何文本编辑器打开此文件，并且您应确保它至少具有以下内容：</p>
<pre class="prettyprint">c = get_config()

 # This starts plotting support always with matplotlib
 c.IPKernelApp.pylab = 'inline'

 # You must give the path to the certificate file.

 # If using a Linux VM:
 c.NotebookApp.certfile = u'/home/ipadmin/.config/ipython/profile_nbserver/mycert.pem'

 # And if using a Windows VM:
 c.NotebookApp.certfile = r'C:\Users\Administrator\.ipython\profile_nbserver\mycert.pem'

 # Create your own password as indicated above
 c.NotebookApp.password = u'sha1:b86e933199ad:a02e9592e5 etc... '

 # Network and browser details. We use a fixed port (9999) so it matches
 # our Windows Azure setup, where we've allowed traffic on that port

 c.NotebookApp.ip = '*'
 c.NotebookApp.port = 9999
 c.NotebookApp.open_browser = False</pre>
<h3>运行 IPython Notebook</h3>
<p>此时，我们已准备好启动 IPython Notebook。为此，导航到要在其中存储 Notebook 的目录并启动 IPython Notebook 服务器：</p>
<pre class="prettyprint">ipython notebook --profile=nbserver</pre>
<p>您现在应能够通过地址 <code>https://[此处为您选择的名称].chinacloudapp.cn</code> 访问您的 IPython Notebook。</p>
<p>在您首次访问 Notebook 时，登录页会询问您的密码：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-001.png" alt="屏幕快照"/></p>
<p>在登录后，您会看到“IPython Notebook 仪表板”，它是所有 Notebook 操作的控制中心。从此页中，您可以创建新 Notebook，打开现有 Notebook 等：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-002.png" alt="屏幕快照"/></p>
<p>如果单击“新建 Notebook”按钮，您将看到一个打开页，如下所示：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-003.png" alt="屏幕快照"/></p>
<p>标记有 <code>In []:</code>提示的区域是输入区域，在这里，您可以键入任何有效的 Python 代码，并且它会在您按 <code>Shift-Enter</code> 或单击“播放”图标（工具栏中的右指三角形）时执行。</p>
<p>由于我们已将 Notebook 配置为使用 NumPy 和 matplotlib 支持自动启动，因此您甚至可以生成图形，例如：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-004.png" alt="屏幕快照"/></p>
<h2>强大的范例：具有丰富媒体的实时计算文档</h2>
<p>Notebook 本身对使用过 Python 和字处理器的任何人来说应感觉非常自然，因为它在某些方面是这二者的融合：您可以执行 Python 代码块，但也可以通过使用工具栏中的下拉菜单将单元格的样式从“代码”更改为“Markdown”来保留笔记及其他文本：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-005.png" alt="屏幕快照"/></p>
<p>但 IPython Notebook 不仅仅是字处理器，因为它允许混合计算和丰富媒体（文本、图形、视频以及新型 Web 浏览器可以显示的几乎任何内容）。例如，您可以出于教育目的混合说明性视频和计算：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-006.png" alt="屏幕快照"/></p>
<p>或在 Notebook 文件中嵌入始终有效且可用的外部网站：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-007.png" alt="屏幕快照"/></p>
<p>利用 Python 的许多用于科技计算的优秀库的功能，可以比进行复杂网络分析更轻松地执行简单计算，且全部操作都在一个环境中完成：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/ipy-notebook-008.png" alt="屏幕快照"/></p>
<p>将最新 Web 的功能与实时计算混合的此范例提供了许多可能性，并且非常适合云；Notebook 可以：</p>
<ul>
<li>
<p>用作计算暂存器以记录对问题进行的探索工作，</p>
</li>
<li>
<p>用于以“实时”计算形式或以硬拷贝格式（HTML、PDF）与同事共享结果，</p>
</li>
<li>
<p>用于分发并显示涉及计算的实时教学材料，以便学生可以立即交互地试用真实代码，修改它，然后重新执行它，</p>
</li>
<li>
<p>用于提供以可由其他人立即重现、验证和扩展的方式显示研究结果的“可执行论文”，</p>
</li>
<li>
<p>用作协作计算的平台：多个用户可以登录到同一 notebook 服务器来共享实时计算会话，</p>
</li>
<li>
<p>等等...</p>
</li>
</ul>
<p>如果您转到 IPython 源代码存储库，您将找到具有 <a href="https://github.com/ipython/ipython/tree/master/docs/examples/notebooks">notebook 示例</a>的整个目录，您可以下载示例，然后在自己的 Windows Azure IPython VM 上进行试用。只需从网站中下载 <code>.ipynb</code> 文件并将它们上载到您的 notebook Windows Azure VM 的仪表板上（或将它们直接下载到 VM 中）。</p>
<h2>结束语</h2>
<p>IPython Notebook 为交互访问 Windows Azure 上的 Python 生态系统的功能提供了强大接口。它涵盖范围广泛的用例，包括简单的探索和学习 Python、数据分析和可视化、模拟和并行计算。生成的 Notebook 文档包含所执行的可与其他 IPython 用户共享的计算的完整记录。IPython Notebook 可用作本地应用程序，但它非常适合 Windows Azure 上的云部署</p>
<p>还可通过 <a href="http://pytools.codeplex.com">Python Tools for Visual Studio</a> (PTVS) 在 Visual Studio 中使用 IPython 的核心功能。PTVS 是 Microsoft 提供的免费开放源代码插件，它可将 Visual Studio 转变为高级 Python 开发环境，其中包括具有 IntelliSense、调试、分析和并行计算集成功能的高级编辑器。</p>
</div>]]></bodyText><umbracoNaviHide>0</umbracoNaviHide><pageTitle>ipython notebook</pageTitle><localize>0</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>ipython notebook</linkid><metaKeywords></metaKeywords><metaDescription><![CDATA[]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>ipython notebook</urlDisplayName><disqusComments>0</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate></pageTemplate></TextpageLeftNav></localize>