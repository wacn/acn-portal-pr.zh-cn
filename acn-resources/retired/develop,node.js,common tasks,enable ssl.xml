<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="18982" parentID="18978" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="4" createDate="2013-07-11T11:13:50" updateDate="2014-08-18T11:16:19" nodeName="Enable SSL" urlName="enable-ssl" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,17380,18978,18982" isDoc=""><bodyText><![CDATA[<div>
<?UMBRACO_MACRO hide="0" chunkpath="devcenter/node (1)" chunkname="article-left-menu" macroAlias="AzureChunkDisplayer" />
<h1>在 Windows Azure Web 角色中为 Node.js 应用程序配置 SSL</h1>
<p>安全套接字层 (SSL) 加密是用于保护通过 Internet 发送的数据的最常见方法。此常见任务讨论如何为在 Web 角色中托管为 Windows Azure 云服务的 Node.js 应用程序指定 HTTPS 终结点，以及如何上载 SSL 证书以保护您的应用程序。</p>
<div class="dev-callout">注意
<p>本文中的步骤仅适用于在 Web 角色中托管为 Windows Azure 云服务的 Node 应用程序。</p>
</div>
<p>此任务包括下列步骤：</p>
<ul>
<li><a href="#step1">步骤 1：创建 Node.js 服务并将该服务发布到云</a></li>
<li><a href="#step2">步骤 2：获取 SSL 证书</a></li>
<li><a href="#step3">步骤 3：导入 SSL 证书</a></li>
<li><a href="#step4">步骤 4：修改服务定义和配置文件</a></li>
<li><a href="#step5">步骤 5：使用 HTTPS 连接到角色实例</a></li>
</ul>
<h2><a name="step1"></a>步骤 1：创建 Node.js 服务并将该服务发布到云</h2>
<p>将 Node.js 应用程序部署到 Windows Azure Web 角色后，服务器证书和 SSL 连接将由 Internet Information Services (IIS) 进行管理，以便能够像 http 服务一样编写 Node.js 服务。您可以采用以下步骤通过 Windows Azure PowerShell 创建一个简单的 Node.js“hello world”服务：</p>
<ol>
<li>
<p>从“开始”菜单或“开始”屏幕，搜索“Windows Azure PowerShell”。最后，右键单击“Windows Azure PowerShell”并选择“以管理员身份运行”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/azure-powershell-start.png" alt="Windows Azure PowerShell 图标"/></p>
<?UMBRACO_MACRO hide="0" chunkpath="devcenter/node" chunkname="install-dev-tools" macroAlias="AzureChunkDisplayer" />
</li>
<li>
<p>使用 <strong>New-AzureServiceProject</strong> cmdlet 创建新服务项目。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-01.png"/></p>
</li>
<li>
<p>使用 <strong>Add-AzureNodeWebRole</strong> cmdlet 向您的服务中添加 Web 角色：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-02.png"/></p>
</li>
<li>
<p>使用 <strong>Publish-AzureServiceProject</strong> cmdlet 将您的服务发布到云。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-03.png"/></p>
<div class="dev-callout"><strong>注意</strong>
<p>如果您以前未导入 Windows Azure 订阅的发布设置，则在尝试发布时会收到错误。有关下载和导入订阅的发布设置的信息，请参阅<a href="/zh-cn/develop/nodejs/how-to-guides/powershell-cmdlets/#ImportPubSettings">如何对 Node.js 使用 Windows Azure PowerShell</a></p>
</div>
</li>
</ol>
<p><strong>Publish-AzureServiceProject</strong> cmdlet 返回的“创建的网站 URL”值包含您的托管应用程序的完全限定域名。您将需要为此特定完全限定域名获取一个 SSL 证书，并将其部署到 Windows Azure。</p>
<h2><a name="step2"></a>步骤 2：获取 SSL 证书</h2>
<p>若要为应用程序配置 SSL，您首先需要获取已由证书颁发机构 (CA)（出于此目的颁发证书的受信任的第三方）签署的 SSL 证书。如果您尚未获取 SSL 证书，则需要从销售 SSL 证书的公司购买一个 SSL 证书。</p>
<p>该证书必须满足 Windows Azure 中的以下 SSL 证书要求：</p>
<ul>
<li>证书必须包含私钥。</li>
<li>必须为密钥交换创建证书（.pfx 文件）。</li>
<li>证书的使用者名称必须与用于访问云服务的域匹配。由于您无法为 chinacloudapp.cn 域获取 SSL 证书，因此，该证书的使用者名称必须与用于访问应用程序的自定义域名匹配。例如 <strong>mysecuresite.chinacloudapp.cn</strong>。</li>
<li>该证书必须使用至少 2048 位加密。</li>
</ul>
<h2><a name="step3"></a>步骤 3：导入 SSL 证书</h2>
<p>您拥有证书后，请将其安装到您的开发计算机上的证书存储中。根据您在下一步中进行的配置更改，会检索该证书并将其作为应用程序部署包的一部分上载到 Windows Azure。</p>
<div class="dev-callout"><strong>注意</strong>
<p>此部分中使用的步骤基于 Windows 8 版本的证书导入向导。如果您使用的是以前版本的 Windows，则此处列出的步骤可能与向导中显示的顺序不一致。如果是这样，请在使用证书导入向导前充分阅读此部分，以便了解必须执行的全部操作。</p>
</div>
<p>若要导入 SSL 证书，请执行以下步骤：</p>
<ol>
<li>
<p>使用 Windows 资源管理器导航到包含证书的 <strong>.pfx</strong> 文件所在的目录，然后双击证书。这将显示“证书导入向导”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/certificateimport.png" alt="证书向导"/></p>
</li>
<li>
<p>在“存储位置”部分，选择“当前用户”，然后单击“下一步”。这会将证书安装在您的用户帐户的证书存储中。</p>
</li>
<li>
<p>继续向导中的操作，接受默认值，直至转到“私钥保护”屏幕。您必须在这里输入证书的密码（如果有）。还必须选择“标志此密钥为可导出的”。最后，单击“下一步”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/exportable.png" alt="私钥保护"/></p>
</li>
<li>
<p>继续向导中的操作，接受默认值，直至证书已成功安装。</p>
</li>
</ol>
<p>现在您必须修改服务定义，以引用已安装的证书。</p>
<h2><a name="step4"></a>步骤 4：修改服务定义和配置文件</h2>
<p>必须将应用程序配置为引用此证书，并且必须添加 HTTPS 终结点。因此，需要更新服务定义和服务配置文件。</p>
<ol>
<li>
<p>在服务目录中，打开服务定义文件 (ServiceDefinition.csdef)，在 <strong>WebRole</strong> 部分添加“证书”部分，并包含有关证书的以下信息：</p>
<pre class="prettyprint">&lt;WebRole name="WebRole1" vmsize="ExtraSmall"&gt;
...
    &lt;Certificates&gt;
        &lt;Certificate name="SampleCertificate" 
            storeLocation="LocalMachine" storeName="My" /&gt;
    &lt;/Certificates&gt;
...
&lt;/WebRole&gt;</pre>
<p>“证书”部分定义证书的名称、其位置及其所在存储的名称。由于我们将证书安装到了用户证书存储中，因此会使用值“My”。还可使用其他证书存储位置。有关详细信息，请参阅<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/gg465718.aspx">如何将证书与服务关联</a>。</p>
</li>
<li>
<p>在您的服务定义文件中，更新“终结点”部分中的 http <strong>InputEndpoint</strong> 元素以启用 HTTPS：</p>
<pre class="prettyprint">&lt;WebRole name="WebRole1" vmsize="Small"&gt;
...
    &lt;Endpoints&gt;
        &lt;InputEndpoint name="Endpoint1" protocol="https" 
            port="443" certificate="SampleCertificate" /&gt;
    &lt;/Endpoints&gt;
...
&lt;/WebRole&gt;</pre>
<p>对服务定义文件进行的所有必需更改已完成，但您仍需要将证书信息添加到服务配置文件中。</p>
</li>
<li>
<p>在您的服务配置文件（<strong>ServiceConfiguration.Cloud.cscfg</strong> 和 <strong>ServiceConfiguration.Local.cscfg</strong>）中，将证书添加到“角色”部分中的空白“证书”部分，并将下面的指纹值示例替换为证书的指纹值：</p>
<pre class="prettyprint">&lt;Role name="WebRole1"&gt;
...
    &lt;Certificates&gt;
        &lt;Certificate name="SampleCertificate" 
            thumbprint="9427befa18ec6865a9ebdc79d4c38de50e6316ff" 
            thumbprintAlgorithm="sha1" /&gt;
    &lt;/Certificates&gt;
...
&lt;/Role&gt;</pre>
</li>
<li>
<p>通过再次发布服务刷新云中的服务配置。在 Windows Azure PowerShell 提示符下，在服务目录中键入 <strong>Publish-AzureServiceProject</strong>。</p>
<p>作为发布过程的一部分，将从本地证书存储复制引用的证书，并将其包含在部署包中。</p>
</li>
</ol>
<h2><a name="step5"></a>步骤 5：使用 HTTPS 连接到角色实例</h2>
<p>现在，您的部署已在 Windows Azure 中启用并运行，您可以使用 HTTPS 连接到该部署。</p>
<ol>
<li>
<p>在管理门户中，选择您的云服务，然后单击“仪表板”。</p>
</li>
<li>
<p>向下滚动并单击显示为“站点 URL”的链接：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/site-url.png" alt="站点 url"/></p>
<div class="dev-callout"><strong>注意</strong>
<p>如果门户中显示的站点 URL 未指定 HTTPS，则必须使用 HTTPS（而不是 HTTP）在浏览器中手动输入 URL。</p>
</div>
</li>
<li>
<p>将打开新浏览器并显示您的网站。</p>
<p>该浏览器会显示一个锁状图标，指示它使用的是 HTTPS 连接。它还指示已为您的应用程序正确配置 SSL。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/node/enable-ssl-08.png"/></p>
</li>
</ol>
<h2>其他资源</h2>
<p><a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/gg465718.aspx">如何将证书与服务关联</a></p>
<p><a href="/zh-cn/develop/nodejs/common-tasks/enable-ssl-worker-role/">在 Windows Azure 辅助角色中为 Node.js 应用程序配置 SSL</a></p>
<p><a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/ff795779.aspx">如何在 HTTPS 终结点上配置 SSL 证书</a></p>
</div>]]></bodyText><umbracoNaviHide>0</umbracoNaviHide><pageTitle>为云服务配置 SSL (Node.js) - Windows Azure</pageTitle><localize>1</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>dev-nodejs-enablessl</linkid><metaKeywords>Node.js Azure SSL, Node.js Azure HTTPS</metaKeywords><metaDescription><![CDATA[了解如何为 Node.js Web 角色指定 HTTPS 终结点，以及如何上载 SSL 证书来保护您的应用程序。]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>启用 SSL</urlDisplayName><disqusComments>1</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate>dynamic-leftnav</pageTemplate></TextpageLeftNav></localize>