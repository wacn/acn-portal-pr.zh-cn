<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="19146" parentID="19145" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="1" createDate="2013-07-11T11:46:51" updateDate="2014-08-18T11:22:22" nodeName="Web Sites with Django" urlName="web-sites-with-django" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,18397,19145,19146" isDoc=""><bodyText><![CDATA[<div><!--?UMBRACO_MACRO chunkpath="devcenter/python (1)" hide="0" chunkname="article-left-menu" macroAlias="AzureChunkDisplayer" ?-->
<h1>使用 Django 创建网站</h1>
<p>在本教程中，我们将介绍如何开始在 Windows Azure 网站上运行 Python。Windows Azure 网站提供受限制的免费托管和快速部署功能 – 现在，您可以使用 Python！随着您的应用程序的增长，您可以切换到付费托管，并且您还可以与所有其他 Windows Azure 服务集成。</p>
<p>我们将演示如何部署使用 Django Web 框架构建的应用程序。我们将指导您完成部署您的应用程序和任何所需库（包括 Django）的步骤。我们会将所有这些内容放入 Git 存储库中，从而可以快速简单地将更新推送到您的网站。最后，我们将通过 Windows Azure 配置新创建的网站，以便它能够运行您的 Python 应用程序。</p>
<p>本教程使用 Python 2.7 和 Django 1.4。您可以自行获取这些软件，也可以通过使用 <a href="http://www.windowsazure.cn/zh-cn/develop/python/">http://www.windowsazure.cn/zh-cn/develop/python/</a> 上的 Windows Installer 链接来快速轻松地安装这些软件。</p>
<p><strong>注意</strong>：Windows Azure 网站现在预安装了 Python 2.7 和 wfastcgi 处理程序。不过，未包括 Web 框架，例如 Django。如果愿意，您仍可以使用其他 Python 解释程序。您只需将它包括在 Git 存储库中，并将网站配置为使用该解释程序而非已安装的 Python 2.7 解释程序。</p>
<p>您还将需要安装 Git 以将网站推送到 Windows Azure – 建议使用 <a href="http://code.google.com/p/msysgit/">msysgit</a>。还有其他可用的部署选项，但本教程将介绍如何使用 Git。在安装 Python、Django 和 Git 之后，您将拥有继续操作所需的一切内容。</p>
<p><strong>注意</strong>：Python 项目目前不支持 TFS 发布。</p>
<h2>在门户中创建网站</h2>
<p>创建您的应用程序的第一步是通过 Windows Azure 管理门户创建网站。为此，您将需要登录到该门户，然后从左侧选择“网站”：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-001.png"/></p>
<p>然后单击左下角的“新建”按钮：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-002.png"/></p>
<p>然后单击“快速创建”，输入 URL，然后选择“创建网站”：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-003.png"/></p>
<p>将快速设置网站：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-004.png"/></p>
<p>接下来，我们要为通过 Git 进行发布提供相应支持。为此，请单击“从源代码管理设置部署”链接。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-005.png"/></p>
<p>从“设置部署”对话框中，向下滚动并选择“本地 Git”选项，然后单击右箭头以继续。</p>
<p>在设置 Git 发布之后，您将立即看到通知您正在创建存储库的页面，然后在创建存储库之后，会将您转至“部署”选项卡，其中包括有关如何连接的说明。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-006.png"/></p>
<h2>网站开发</h2>
<p>现在，我们已在 Windows Azure 中创建了我们的 Git 存储库，我们将开始从本地计算机使用网站填充它。第一步是使用提供的 url 克隆现有空网站：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-007.png"/></p>
<p>从这里，我们已准备好使用网站设置登记。我们将需要做一些事情：</p>
<ol>
<li>包括 Django 库以及我们将用于运行网站的其他库。</li>
<li>包括 Django 应用程序代码。</li>
</ol>
<p>首先，我们将包括 Django 库。为此，我们将使用以下命令来创建一个名为 site-packages 的新目录并将我们安装的 Django 版本复制到那里：</p>
<pre class="prettyprint">mkdir site-packages
cd site-packages
xcopy /s C:\Python27\lib\site-packages\* .</pre>
<p>这会复制位于 site-packages 中的所有库，包括 Django。如果您的网站不使用某些库，可以删除它们。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-008.png"/></p>
<p>接下来，我们将创建初始 Django 应用程序。您可以像从命令行创建任何其他 Django 应用程序一样执行此操作，也可以使用 <a href="http://pytools.codeplex.com/">Python Tools for Visual Studio</a> 创建项目。我们将在这里演示这两种方法。</p>
<p><strong>方法 1：</strong> 若要从命令行创建新项目，您只需运行以下命令，它将在 DjangoApplication 文件夹中创建 Django 应用程序：</p>
<pre class="prettyprint">C:\Python27\python.exe -m django.bin.django-admin startproject DjangoApplication</pre>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-010.png"/></p>
<p><strong>方法 2：</strong> <br />您还可以使用 Python Tools for Visual Studio 创建新网站。启动安装了 Python Tools for Visual Studio 的 Visual Studio，然后选择“文件”-&gt;“新建项目”。钻取到“其他语言”下的“Python”项目，然后选择“Django 应用程序”。输入“DjangoApplication”作为项目名称，并确保未选中“创建解决方案的目录”以获得与从命令行创建 Django 应用程序时完全相同的目录结构。此选项将使您使用 Visual Studio 解决方案和项目文件进行设置，从而为您提供了很好的本地开发体验，包括模板调试和智能感知。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-011.png"/></p>
<p>现在，我们只需添加我们刚添加的所有文件并将网站推送到 Git。为此，我们需要运行一些命令：</p>
<pre class="prettyprint">git add DjangoApplication site-packages
git commit -m "Initial site"
git remote add azure https://dinov@pythonwebsite.scm.chinacloudsites.cn/PythonWebSite.git
git push azure master</pre>
<p>第一个命令将添加要跟踪的未跟踪文件。第二个命令将提交我们刚添加到存储库中的文件。第三个命令为我们的存储库添加名为“azure”的远程存储库。最后，我们采用更改并将它们推送到远程存储库，这还会启动部署。在执行此操作之后，我们应看到类似于下图的结果：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-013.png"/></p>
<p>在执行推送后，您将看到 Windows Azure 门户刷新并显示活动部署：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-014.png"/></p>
<h2>网站配置</h2>
<p>我们需要配置网站以了解我们的 Django 项目并使用 wfastcgi 处理程序。为此，我们可以单击屏幕顶部的“配置”选项卡，我们将需要向下滚动到该页的下半部分，其中包含应用程序设置和处理程序映射。</p>
<p>此处设置的所有设置将在实际请求时转变为环境变量。这意味着我们可以使用它们来配置 DJANGO_SETTINGS_MODULE 环境变量以及 PYTHONPATH 和 WSGI_HANDLER。如果您的应用程序具有其他配置值，则您可以在此处分配这些值，然后从环境中选取它们。有时，您将需要设置您的网站中文件的路径，例如，我们将需要为 PYTHONPATH 执行此操作。在作为 Windows Azure 网站运行时，您的网站将位于“D:\home\site\wwwroot\”，因此您可以在需要磁盘上的文件的完整路径的任何位置使用它。</p>
<p>若要设置 Django 应用程序，我们需要设置三个环境变量。第一个是 DJANGO_SETTINGS_MODULE，它提供将用于配置所有内容的 Django 应用程序的模块名称。第二个是 PYTHONPATH 环境变量，以便我们可以找到设置模块所在的包。第三个是 WSGI_HANDLER。它是模块/包名称，后跟要使用的模块中的属性；例如，mypackage.mymodule.handler。添加括号以指示应调用属性。因此，对于这些变量，我们将把它们设置为：</p>
<pre class="prettyprint">DJANGO_SETTINGS_MODULE    DjangoApplication.settings
PYTHONPATH                D:\home\site\wwwroot\DjangoApplication;D:\home\site\wwwroot\site-packages
WSGI_HANDLER              django.core.handlers.wsgi.WSGIHandler()</pre>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-015.png"/></p>
<p>然后，我们需要配置处理程序映射。为此，我们使用 Python 解释程序的路径和 wfastcgi.py 脚本的路径为所有扩展注册处理程序：</p>
<pre class="prettyprint">EXTENSION                 *
SCRIPT PROCESSOR PATH     D:\python27\python.exe
ADDITIONAL ARGUMENTS      D:\python27\scripts\wfastcgi.py</pre>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-016.png"/></p>
<p>此时，我们可以单击底部的“保存”按钮。</p>
<p>最后，我们可以返回到仪表板，转到左侧的“站点 URL”，单击链接，然后我们将打开我们的新 Django 网站：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/python/django-ws-017.png"/></p>
<h2>后续步骤</h2>
<p>从这里，您可以继续使用已使用的工具开发 Django 应用程序。如果您使用 <a href="http://pytools.codeplex.com/">Python Tools for Visual Studio</a> 进行开发，则您将很可能需要安装 <a href="http://code.google.com/p/visualgit/">VisualGit</a> 来获取 Visual Studio 中的源代码管理集成。</p>
<p>您的应用程序将很可能具有除 Python 和 Django 以外的其他依赖项。如果您使用 <a href="http://www.windowsazure.cn/zh-cn/develop/python/">http://www.windowsazure.cn/zh-cn/develop/python/</a> 中的安装程序进行安装，表明您已安装 PIP，并可以使用它来快速添加新依赖项。例如，安装自然语言工具包及其所有依赖项：</p>
<pre class="prettyprint">pip install nltk</pre>
<p>然后，您需要通过从 C:\Python27\Lib\site-packages 复制到您的本地 site-packages 目录来更新 site-packages 目录。</p>
<p>然后，执行“git status”来查看新添加的文件，再执行“git add”后跟“git commit”来将其提交到存储库。最后，您可以执行“git push”，这会将更新的网站部署到 Windows Azure。</p>
<p>同样地，您可以像通常一样转到 DjangoApplication 目录并使用 manage.py 来开始将新应用程序添加到 Django 项目中。</p>
</div>]]></bodyText><umbracoNaviHide>0</umbracoNaviHide><pageTitle>web sites with django</pageTitle><localize>0</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>web sites with django</linkid><metaKeywords></metaKeywords><metaDescription><![CDATA[]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>web sites with django</urlDisplayName><disqusComments>0</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate></pageTemplate></TextpageLeftNav></localize>