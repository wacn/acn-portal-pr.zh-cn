<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="19133" parentID="19130" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="3" createDate="2013-07-11T11:45:24" updateDate="2014-08-18T11:21:50" nodeName="Queue Service" urlName="queue-service" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,18397,19130,19133" isDoc=""><bodyText><![CDATA[<div>
<h1>如何从 Python 使用队列存储服务</h1>
<p>本指南演示如何使用 Windows Azure 队列存储服务执行常见任务。相关示例是使用 Python API 编写的。涉及的任务包括<strong>插入</strong>、<strong>扫视</strong>、<strong>获取</strong>和<strong>删除</strong>队列消息以及<strong>创建和删除队列</strong>。有关队列的详细信息，请参阅<a href="#next-steps">后续步骤</a>一节。</p>
<h2>目录</h2>
<p><a href="#what-is">什么是队列存储？</a> <br /><a href="#concepts">概念</a> <br /><a href="#create-account">创建 Windows Azure 存储帐户</a> <br /><a href="#create-queue">如何：创建队列</a> <br /><a href="#insert-message">如何：在队列中插入消息</a> <br /><a href="#peek-message">如何：扫视下一条消息</a> <br /><a href="#get-message">如何：取消对下一条消息的排队</a> <br /><a href="#change-contents">如何：更改已排队消息的内容</a> <br /><a href="#advanced-get">如何：用于对消息取消排队的其他方法</a> <br /><a href="#get-queue-length">如何：获取队列长度</a> <br /><a href="#delete-queue">如何：删除队列</a> <br /><a href="#next-steps">后续步骤</a></p>
<!--?UMBRACO_MACRO chunkpath="devcenter/shared" hide="0" chunkname="howto-queue-storage" macroAlias="AzureChunkDisplayer" ?-->
<h2><a name="create-account"></a>创建 Windows Azure 存储帐户</h2>
<!--?UMBRACO_MACRO chunkpath="devcenter/shared" hide="0" chunkname="create-storage-account" macroAlias="AzureChunkDisplayer" ?-->
<p><strong>注意：</strong>如果您需要安装 Python 或客户端库，请参阅 <a href="/zh-cn/develop/python/common-tasks/install-python">Python 安装指南</a>。</p>
<h2><a name="create-queue"></a>如何：创建队列</h2>
<p>可以通过 <strong>QueueService</strong> 对象处理队列。以下代码创建 <strong>QueueService</strong> 对象。将以下代码添加到您希望在其中以编程方式访问 Windows Azure 存储的任何 Python 文件的顶部附近：</p>
<pre class="prettyprint">from azure.storage import *</pre>
<p>以下代码使用存储帐户名称和帐户密钥创建 <strong>QueueService</strong> 对象。使用实际帐户和密钥替换“myaccount”和“mykey”。</p>
<pre class="prettyprint">queue_service = QueueService(account_name='myaccount', account_key='mykey')

queue_service.create_queue('taskqueue')</pre>
<h2><a name="insert-message"></a>如何：在队列中插入消息</h2>
<p>若要在队列中插入消息，可使用 <strong>put_message</strong> 方法创建一条新消息并将其添加到队列中。</p>
<pre class="prettyprint">queue_service.put_message('taskqueue', 'Hello World')</pre>
<h2><a name="peek-message"></a>如何：扫视下一条消息</h2>
<p>通过调用 <strong>peek_messages</strong> 方法，您可以扫视队列前面的消息，而不会从队列中删除它。默认情况下，<strong>peek_messages</strong> 扫视单个消息。</p>
<pre class="prettyprint">messages = queue_service.peek_messages('taskqueue')
for message in messages:
    print(message.message_text)</pre>
<h2><a name="get-message"></a>如何：取消对下一条消息的排队</h2>
<p>您的代码分两步从队列中删除消息。在调用 <strong>get_messages</strong> 时，默认情况下您会获得队列中的下一条消息。对于从此队列读取消息的任何其他代码，从 <strong>get_messages</strong> 返回的消息将变得不可见。默认情况下，此消息将持续 30 秒不可见。若要从队列中删除消息，您还必须调用 <strong>delete_message</strong>。此删除消息的两步过程确保在您的代码因硬件或软件故障而无法处理消息时，代码的另一个实例可以获取相同消息并重试。您的代码在处理消息后会调用 <strong>delete_message</strong>。</p>
<pre class="prettyprint">messages = queue_service.get_messages('taskqueue')
for message in messages:
    print(message.message_text)
    queue_service.delete_message('taskqueue', message.message_id, message.pop_receipt)</pre>
<h2><a name="change-contents"></a>如何：更改已排队消息的内容</h2>
<p>您可以更改队列中现有消息的内容。如果消息表示工作任务，则可以使用此功能来更新该工作任务的状态。以下代码使用 <strong>update_message</strong> 方法来更新消息。</p>
<pre class="prettyprint">messages = queue_service.get_messages('taskqueue')
for message in messages:
    queue_service.update_message('taskqueue', message.message_id, 'Hello World Again', message.pop_receipt, 0)</pre>
<h2><a name="advanced-get"></a>如何：用于对消息取消排队的其他方法</h2>
<p>您可以采用两种方法来自定义从队列中检索消息的过程。首先，您可以获取一批消息（最多 32 条）。其次，您可以设置更长或更短的不可见超时时间，从而允许您的代码使用更多或更少时间来完全处理每个消息。以下代码示例使用 <strong>get_messages</strong> 方法在一次调用中获取 16 条消息。然后，使用 for 循环来处理每条消息。它还将每条消息的不可见超时时间设置为 5 分钟。</p>
<pre class="prettyprint">messages = queue_service.get_messages('taskqueue', numofmessages=16, visibilitytimeout=5*60)
for message in messages:
    print(message.message_text)
    queue_service.delete_message('taskqueue', message.message_id, message.pop_receipt)</pre>
<h2><a name="get-queue-length"></a>如何：获取队列长度</h2>
<p>您可以获得队列中消息的估计数。<strong>get_queue_metadata</strong> 方法要求队列服务返回有关队列的元数据，并且 <strong>x-ms-approximate-messages-count</strong> 应用作返回的字典中的索引以查找计数。结果仅是近似值，因为在队列服务响应您的请求之后，可能添加或删除了消息。</p>
<pre class="prettyprint">queue_metadata = queue_service.get_queue_metadata('taskqueue')
count = queue_metadata['x-ms-approximate-messages-count']</pre>
<h2><a name="delete-queue"></a>如何：删除队列</h2>
<p>若要删除队列及其中包含的所有消息，请调用 <strong>delete_queue</strong> 方法。</p>
<pre class="prettyprint">queue_service.delete_queue('taskqueue')</pre>
<h2><a name="next-steps"></a>后续步骤</h2>
<p>现在，您已了解有关队列存储的基础知识，单击下面的链接可了解如何执行更复杂的存储任务。</p>
<ul>
<li>查看 MSDN 参考：<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/gg433040.aspx">在 Windows Azure 中存储和访问数据</a></li>
<li>访问 <a href="http://blogs.msdn.com/b/windowsazurestorage/">Windows Azure 存储团队博客</a></li>
</ul>
</div>]]></bodyText><umbracoNaviHide>0</umbracoNaviHide><pageTitle>queue service</pageTitle><localize>0</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>queue service</linkid><metaKeywords></metaKeywords><metaDescription><![CDATA[]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>queue service</urlDisplayName><disqusComments>0</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate></pageTemplate></TextpageLeftNav></localize>