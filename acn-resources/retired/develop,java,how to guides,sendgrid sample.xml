<?xml version="1.0" encoding="UTF-8"?>
<localize><umbTextpage id="18881" parentID="18554" level="5" writerID="52" creatorID="94" nodeType="1059" template="1052" sortOrder="18" createDate="2013-07-11T10:58:47" updateDate="2014-08-18T11:12:09" nodeName="SendGrid Sample" urlName="sendgrid-sample" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,18396,18554,18881" isDoc=""><bodyText><![CDATA[<div>
<?UMBRACO_MACRO modalpopup="0" chunkurl="" hide="0" chunkpath="devcenter/java" chunkname="article-left-menu" modaltrigger="" macroAlias="AzureChunkDisplayer" />
<h1>如何在 Windows Azure 部署中通过 Java 使用 SendGrid 发送电子邮件</h1>
<p>以下示例演示如何能够使用 SendGrid 从在 Windows Azure 中托管的网页上发送电子邮件。所得的应用程序将提示用户输入电子邮件值，如以下屏幕快照中所示。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/java/sendgridjavaemailform.jpg" alt="“电子邮件”窗体"/></p>
<p>所得的电子邮件将与以下屏幕快照类似。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/java/sendgridjavaemailsent.jpg" alt="电子邮件"/></p>
<p>您将需要执行以下操作来使用本主题中的代码：</p>
<ol>
<li>获取 javax.mail JAR（例如从 <a href="http://www.oracle.com/technetwork/java/javamail/index.html">http://www.oracle.com/technetwork/java/javamail/index.html</a>）。</li>
<li>将这些 JAR 添加到您的 Java 生成路径。</li>
<li>如果使用 Eclipse 创建此 Java 应用程序，则可使用 Eclipse 的部署程序集功能在应用程序部署文件 (WAR) 中加入 SendGrid 库。如果不使用 Eclipse 创建此 Java 应用程序，则确保在与您的 Java 应用程序相同的 Azure 角色中加入这些库，并且将这些库添加到应用程序的类路径下。</li>
</ol>
<p>还必须有自己的 SendGrid 用户名和密码，才能发送电子邮件。若要开始使用 SendGrid，请参阅<a href="/zh-cn/develop/java/how-to-guides/sendgrid-email-service/#bkmk_CreateSendGridAcct">创建 SendGrid 帐户</a>。Windows Azure 客户获得免费享受 SendGrid 的 Bronze Plan 两个月的特别优惠。通过此计划，每个月可免费发送 40000 封电子邮件，并且所有 bronze 功能在前两个月均免费。有关 SendGrid 提供的其他服务的信息，请参阅 <a href="http://sendgrid.com/features">http://sendgrid.com/features</a>。</p>
<p>此外，强烈建议熟悉<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/hh690944">在 Eclipse 中创建用于 Windows Azure 的 Hello World 应用程序</a>上的信息，如果不使用 Eclipse，则强烈建议熟悉在 Windows Azure 中托管 Java 应用程序的其他方法。</p>
<h2>创建用于发送电子邮件的 Web 窗体</h2>
<p>以下代码演示如何创建 Web 窗体以检索用于发送电子邮件的用户数据。用于此内容的 JSP 文件的名称为 <strong>emailform.jsp</strong>。</p>
<pre class="prettyprint">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"     pageEncoding="ISO-8859-1" %&gt; &lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt; &lt;title&gt;Email form&lt;/title&gt; &lt;/head&gt; &lt;body&gt;  &lt;p&gt;Fill in all fields and click &lt;b&gt;Send this email&lt;/b&gt;.&lt;/p&gt;  &lt;br/&gt;   &lt;form action="sendemail.jsp" method="post"&gt;    &lt;table&gt;      &lt;tr&gt;        &lt;td&gt;To:&lt;/td&gt;        &lt;td&gt;&lt;input type="text" size=50 name="emailTo"&gt;        &lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;From:&lt;/td&gt;        &lt;td&gt;&lt;input type="text" size=50 name="emailFrom"&gt;        &lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;Subject:&lt;/td&gt;        &lt;td&gt;&lt;input type="text" size=100 name="emailSubject" value="My email subject"&gt;        &lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;Text:&lt;/td&gt;        &lt;td&gt;&lt;input type="text" size=400 name="emailText" value="Hello,&lt;p&gt;This is my message.&lt;/p&gt;Thank you." /&gt;        &lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;SendGrid user name:&lt;/td&gt;        &lt;td&gt;&lt;input type="text" name="sendGridUser"&gt;        &lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;SendGrid password:&lt;/td&gt;        &lt;td&gt;&lt;input type="password" name="sendGridPassword"&gt;        &lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td colspan=2&gt;&lt;input type="submit" value="Send this email"&gt;        &lt;/td&gt;      &lt;/tr&gt;    &lt;/table&gt;  &lt;/form&gt;  &lt;br/&gt; &lt;/body&gt; &lt;/html&gt;</pre>
<h2>创建用于发送电子邮件的代码</h2>
<p>以下代码创建电子邮件并发送它，在填写 emailform.jsp 中的窗体时将调用这段代码。用于此内容的 JSP 文件的名称为 <strong>sendemail.jsp</strong>。</p>
<pre class="prettyprint">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"     pageEncoding="ISO-8859-1" import="javax.activation.*, javax.mail.*, javax.mail.internet.*, java.util.Date, java.util.Properties" %&gt; &lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt; &lt;title&gt;Email processing happens here&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;b&gt;This is my send mail page.&lt;/b&gt;&lt;p/&gt;  &lt;%   final String sendGridUser = request.getParameter("sendGridUser");  final String sendGridPassword = request.getParameter("sendGridPassword");   class SMTPAuthenticator extends Authenticator  {    public PasswordAuthentication getPasswordAuthentication()    {         String username = sendGridUser;         String password = sendGridPassword;          return new PasswordAuthentication(username, password);       }  }  try  {       // The SendGrid SMTP server.      String SMTP_HOST_NAME = "smtp.sendgrid.net";       Properties properties;       properties = new Properties();       // Specify SMTP values.      properties.put("mail.transport.protocol", "smtp");      properties.put("mail.smtp.host", SMTP_HOST_NAME);      properties.put("mail.smtp.port", 587);      properties.put("mail.smtp.auth", "true");       // Display the email fields entered by the user.       out.println("Value entered for email Subject: " + request.getParameter("emailSubject") + "&lt;br/&gt;");              out.println("Value entered for email      To: " + request.getParameter("emailTo") + "&lt;br/&gt;");      out.println("Value entered for email    From: " + request.getParameter("emailFrom") + "&lt;br/&gt;");      out.println("Value entered for email    Text: " + "&lt;br/&gt;" + request.getParameter("emailText") + "&lt;br/&gt;");       // Create the authenticator object.      Authenticator authenticator = new SMTPAuthenticator();       // Create the mail session object.      Session mailSession;      mailSession = Session.getDefaultInstance(properties, authenticator);       // Display debug information to stdout, useful when using the      // compute emulator during development.      mailSession.setDebug(true);       // Create the message and message part objects.      MimeMessage message;      Multipart multipart;      MimeBodyPart messagePart;        message = new MimeMessage(mailSession);       multipart = new MimeMultipart("alternative");      messagePart = new MimeBodyPart();      messagePart.setContent(request.getParameter("emailText"), "text/html");      multipart.addBodyPart(messagePart);                   // Specify the email To, From, Subject and Content.       message.setFrom(new InternetAddress(request.getParameter("emailFrom")));      message.addRecipient(Message.RecipientType.TO, new InternetAddress(request.getParameter("emailTo")));      message.setSubject(request.getParameter("emailSubject"));       message.setContent(multipart);       // Uncomment the following if you want to add a footer.      // message.addHeader("X-SMTPAPI", "{\"filters\": {\"footer\": {\"settings\": {\"enable\":1,\"text/html\": \"&lt;html&gt;This is my &lt;b&gt;email footer&lt;/b&gt;.&lt;/html&gt;\"}}}}");       // Uncomment the following if you want to enable click tracking.      // message.addHeader("X-SMTPAPI", "{\"filters\": {\"clicktrack\": {\"settings\": {\"enable\":1}}}}");       Transport transport;      transport = mailSession.getTransport();      // Connect the transport object.      transport.connect();      // Send the message.      transport.sendMessage(message,  message.getRecipients(Message.RecipientType.TO));      // Close the connection.      transport.close();      out.println("&lt;p&gt;Email processing completed.&lt;/p&gt;");   }  catch (Exception e)  {      out.println("&lt;p&gt;Exception encountered: " +                          e.getMessage()     +                         "&lt;/p&gt;");     } %&gt;  &lt;/body&gt; &lt;/html&gt;</pre>
<p>除了发送电子邮件外，emailform.jsp 还向用户提供发送结果；以下屏幕快照就是一个例子：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/java/sendgridjavaresult.jpg" alt="发送邮件结果"/></p>
<h2>后续步骤</h2>
<p>将您的应用程序部署到计算模拟器，然后在浏览器中运行 emailform.jsp，在窗体中输入值，单击 <strong>Send this email</strong>，然后在 sendemail.jsp 中查看结果。</p>
<p>提供这段代码是为了向您演示如何在 Windows Azure 上通过 Java 使用 SendGrid。在生产中部署到 Windows Azure 之前，您可能希望添加更多错误处理或其他功能。例如：</p>
<ul>
<li>您可能会使用 Windows Azure 存储 Blob 或 SQL Database 存储电子邮件地址和电子邮件，而不使用 Web 窗体。有关通过 Java 使用 Windows Azure Blob 存储 Blob 的信息，请参阅<a href="http://www.windowsazure.cn/zh-cn/develop/java/how-to-guides/blob-storage/">如何从 Java 使用 Windows Azure Blob 存储服务</a>。有关通过 Java 使用 SQL Database 的信息，请参阅<a href="http://www.windowsazure.cn/zh-cn/develop/java/how-to-guides/using-sql-azure-in-java/">在 Java 中使用 SQL Database</a>。</li>
<li>您可能会使用 <code>RoleEnvironment.getConfigurationSettings</code> 从部署的配置设置中检索 SendGrid 用户名和密码，而不使用 Web 窗体检索这些值。有关 <code>RoleEnvironment</code> 类的信息，请参阅<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/hh690948">在 JSP 中使用 Windows Azure 服务运行时库</a>以及 <a href="http://dl.windowsazure.cn/javadoc">http://dl.windowsazure.cn/javadoc</a> 上的 Windows Azure 服务运行时程序包文档。</li>
<li>有关通过 Java 使用 SendGrid 的详细信息，请参阅<a href="/zh-cn/develop/java/how-to-guides/sendgrid-email-service">如何通过 Java 使用 SendGrid 发送电子邮件</a>。</li>
</ul>
</div>]]></bodyText><umbracoNaviHide>1</umbracoNaviHide><pageTitle>Windows Azure Java 开发人员中心 - 操作方法指南 - SendGrid 示例</pageTitle><metaKeywords>SendGrid 电子邮件 java azure 示例</metaKeywords><metaDescription><![CDATA[了解如何从托管在 Windows Azure 中并以 Java 开发的网页中使用 SendGrid 发送电子邮件。]]></metaDescription><linkid>develop-java-how-to-guides-sendgrid-sample</linkid><urlDisplayName>SendGrid 示例</urlDisplayName><headerExpose></headerExpose><footerExpose></footerExpose><disqusComments>1</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate>dynamic-leftnav</pageTemplate><localize>1</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><headerText><![CDATA[]]></headerText></umbTextpage></localize>