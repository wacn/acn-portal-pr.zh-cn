<?xml version="1.0" encoding="UTF-8"?>
<localize><TextpageLeftNav id="19102" parentID="19098" level="5" writerID="52" creatorID="94" nodeType="1137" template="1052" sortOrder="4" createDate="2013-07-11T11:30:39" updateDate="2014-08-18T11:20:41" nodeName="Website w SQL Database and Git" urlName="website-w-sql-database-and-git" writerName="uRest" creatorName="xunfan" path="-1,11978,13431,17389,19098,19102" isDoc=""><bodyText><![CDATA[<div><!--?UMBRACO_MACRO chunkpath="devcenter/php" hide="0" chunkname="article-left-menu" macroAlias="AzureChunkDisplayer" ?-->
<h1>创建带 SQL Database 的 PHP 网站并使用 Git 进行部署</h1>
<p>本教程演示如何创建带 Windows Azure SQL Database 的 PHP Windows Azure 网站以及如何使用 Git 部署该网站。本教程假定您已在计算机上安装 <a href="http://www.php.net/manual/en/install.php">PHP</a>、<a href="http://www.microsoft.com/zh-cn/download/details.aspx?id=29062">SQL Server Express</a>、<a href="http://www.microsoft.com/zh-cn/download/details.aspx?id=20098">Microsoft Drivers for SQL Server for PHP</a>、Web 服务器和 <a href="http://git-scm.com/">Git</a>。完成本指南之后，您将拥有一个在 Windows Azure 中运行的 PHP-SQL Database 网站。</p>
<div class="dev-callout">注意
<p>您可以使用 <a href="http://www.microsoft.com/web/downloads/platform.aspx">Microsoft Web 平台安装程序</a>安装和配置 PHP、SQL Server Express、Microsoft Drivers for SQL Server for PHP 和 Internet Information Services (IIS)。</p>
</div>
<p>您将了解到以下内容：</p>
<ul>
<li>如何使用管理门户创建 Windows Azure 网站和 SQL Database。由于默认情况下已在 Windows Azure 网站中启用 PHP，因此运行 PHP 代码没有任何特殊要求。</li>
<li>如何使用 Git 将应用程序发布和重新发布到 Windows Azure。</li>
</ul>
<p>通过按照本教程中的说明进行操作，您将在 PHP 中构建简单的注册 Web 应用程序。应用程序将承载于 Windows Azure 网站中。以下是已完成应用程序的屏幕快照：</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/running_app_3.png" alt="Windows Azure PHP 网站"/></p>
<!--?UMBRACO_MACRO chunkpath="devcenter/shared" hide="0" chunkname="create-account-and-websites-note" macroAlias="AzureChunkDisplayer" ?-->
<h2>创建 Windows Azure 网站并设置 Git 发布</h2>
<p>按照以下步骤创建 Windows Azure 网站和 SQL Database：</p>
<ol>
<li>登录到<a href="https://manage.windowsazure.cn/">管理门户</a>。</li>
<li>
<p>单击该门户左下角的“+ 新建”图标。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/new_website.jpg" alt="创建新的 Windows Azure 网站"/></p>
</li>
<li>
<p>单击“网站”，然后单击“与数据库一起创建”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/custom_create.jpg" alt="自定义创建新的网站"/></p>
<p>输入“URL”的值，从“数据库”下拉列表中选择“新建 SQL Database”，并在“区域”下拉列表中为网站选择数据中心。单击对话框底部的箭头。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/website_details_sqlazure.jpg" alt="填写网站详细信息"/></p>
</li>
<li>
<p>输入数据库的“名称”的值，选择“版本”<a href="http://msdn.microsoft.com/zh-cn/library/windowsazure/ee621788.aspx">（Web 或企业版）</a>，再依次选择数据库的“最大大小”、“排序规则”和“新建 SQL Database 服务器”。单击对话框底部的箭头。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/database_settings.jpg" alt="填写 SQL Database 设置"/></p>
</li>
<li>
<p>输入管理员名称和密码（并确认密码），选择将在其中创建新的 SQL Database 服务器的区域，并选中“允许 Windows Azure 服务访问服务器”<code></code>框。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/create_server.jpg" alt="新建 SQL Database 服务器"/></p>
<p>创建网站后，将显示文本“已成功完成网站‘[SITENAME]’的创建”。现在，您可以启用 Git 发布。</p>
</li>
<li>
<p>单击网站列表中显示的网站的名称以打开该网站的“快速启动”仪表板。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/go_to_dashboard.png" alt="打开网站仪表板"/></p>
</li>
<li>
<p>在“快速启动”页的底部，单击“设置 Git 发布”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/setup_git_publishing.png" alt="设置 Git 发布"/></p>
</li>
<li>
<p>若要启用 Git 发布，您必须提供用户名和密码。记下您创建的用户名和密码。（如果您之前已设置 Git 存储库，则将跳过此步骤。）</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/credentials.jpg" alt="创建发布凭据"/></p>
<p>设置存储库需要花费几秒钟的时间。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/creating_repo.jpg" alt="创建 Git 存储库"/></p>
</li>
<li>
<p>在您的存储库已就绪后，将显示有关将应用程序文件推送到存储库的说明。记下这些说明 - 稍后您将使用它们。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/shared/git_instructions.png" alt="Git 说明"/></p>
</li>
</ol>
<h2>获取 SQL Database 连接信息</h2>
<p>若要连接到正在 Windows Azure 网站中运行的 SQL Database 实例，您将需要连接信息。若要获取 SQL Database 连接信息，请按照以下步骤操作：</p>
<ol>
<li>
<p>从管理门户中，单击“链接的资源”，然后单击数据库名称。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/linked_resources.jpg" alt="链接的资源"/></p>
</li>
<li>
<p>单击“查看连接字符串”。</p>
<p><img src="http://wacnstorage.blob.core.chinacloudapi.cn/marketing-resource/media/devcenter/php/connection_string.jpg" alt="连接字符串"/></p>
</li>
<li>
<p>从结果对话框的 <strong>PHP</strong> 部分，记下 <code>SERVER</code>、<code>DATABASE</code> 和 <code>USERNAME</code> 的值。</p>
</li>
</ol>
<h2>本地构建和测试应用程序</h2>
<p>注册应用程序是一个简单的 PHP 应用程序，它使您能够通过提供您的姓名和电子邮件地址来注册事件。有关以前的注册者的信息将显示在表中。注册信息将存储在 SQL Database 实例中。应用程序由两个文件组成（复制/粘贴以下可用代码）：</p>
<ul>
<li><strong>index.php</strong>：将显示注册形式及包含注册者信息的表。</li>
<li><strong>createtable.php</strong>：为应用程序创建 SQL Database 表。该文件只能被使用一次。</li>
</ul>
<p>若要本地运行应用程序，请执行下列步骤。请注意，这些步骤假定您已在本地计算机上设置 PHP、SQL Server Express 和 Web 服务器，并且您已启用 <a href="http://php.net/pdo_sqlsrv">SQL Server 的 PDO 扩展</a>。</p>
<ol>
<li>
<p>创建一个名为 <code>registration</code> 的 SQL Server 数据库。您可以从 <code>sqlcmd</code> 命令提示符使用以下命令执行此操作：</p>
<pre class="prettyprint">&gt;sqlcmd -S localhost\sqlexpress -U &lt;local user name&gt; -P &lt;local password&gt;
1&gt; create database registration
2&gt; GO</pre>
</li>
<li>
<p>在 Web 服务器的根目录中，创建一个名为 <code>registration</code> 的文件夹并在其中创建两个文件 - 一个名为 <code>createtable.php</code>，另一个名为 <code>index.php</code>。</p>
</li>
<li>
<p>在文本编辑器或 IDE 中打开 <code>createtable.php</code> 文件并添加以下代码。此代码将用于在 <code>registration</code> 数据库中创建 <code>registration_tbl</code> 表。</p>
<pre class="prettyprint">&lt;?php
// DB connection info
$host = "localhost\sqlexpress";
$user = "user name";
$pwd = "password";
$db = "registration";
try{
    $conn = new PDO( "sqlsrv:Server= $host ; Database = $db ", $user, $pwd);
    $conn-&gt;setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );
    $sql = "CREATE TABLE registration_tbl(
    id INT NOT NULL IDENTITY(1,1) 
    PRIMARY KEY(id),
    name VARCHAR(30),
    email VARCHAR(30),
    date DATE)";
    $conn-&gt;query($sql);
}
catch(Exception $e){
    die(print_r($e));
}
echo "&lt;h3&gt;Table created.&lt;/h3&gt;";
?&gt;</pre>
<div class="dev-callout">注意
<p>您将需要使用本地 SQL Server 用户名和密码更新 <code>$user</code> 和 <code>$pwd</code> 的值。</p>
</div>
</li>
<li>
<p>打开 Web 浏览器并浏览到 <a href="http://localhost/tasklist/createtable.php">http://localhost/registration/createtable.php</a>。这将在数据库中创建 <code>registration_tbl</code> 表。</p>
</li>
<li>
<p>在文本编辑器或 IDE 中打开 <strong>index.php</strong> 文件，并为页面添加基本 HTML 和 CSS 代码（将在后续步骤中添加 PHP 代码）。</p>
<pre class="prettyprint">&lt;html&gt;
&lt;head&gt;
&lt;Title&gt;Registration Form&lt;/Title&gt;
&lt;style type="text/css"&gt;
    body { background-color: #fff; border-top: solid 10px #000;
        color: #333; font-size: .85em; margin: 20; padding: 20;
        font-family: "Segoe UI", Verdana, Helvetica, Sans-Serif;
    }
    h1, h2, h3,{ color: #000; margin-bottom: 0; padding-bottom: 0; }
    h1 { font-size: 2em; }
    h2 { font-size: 1.75em; }
    h3 { font-size: 1.2em; }
    table { margin-top: 0.75em; }
    th { font-size: 1.2em; text-align: left; border: none; padding-left: 0; }
    td { padding: 0.25em 2em 0.25em 0em; border: 0 none; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Register here!&lt;/h1&gt;
&lt;p&gt;Fill in your name and email address, then click &lt;strong&gt;Submit&lt;/strong&gt; to register.&lt;/p&gt;
&lt;form method="post" action="index.php" enctype="multipart/form-data" &gt;
      Name  &lt;input type="text" name="name" id="name"/&gt;&lt;/br&gt;
      Email &lt;input type="text" name="email" id="email"/&gt;&lt;/br&gt;
      &lt;input type="submit" name="submit" value="Submit" /&gt;
&lt;/form&gt;
&lt;?php


?&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
</li>
<li>
<p>在 PHP 标记中，添加用于连接到数据库的 PHP 代码。</p>
<pre class="prettyprint">// DB connection info
$host = "localhost\sqlexpress";
$user = "user name";
$pwd = "password";
$db = "registration";
// Connect to database.
try {
    $conn = new PDO( "sqlsrv:Server= $host ; Database = $db ", $user, $pwd);
    $conn-&gt;setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );
}
catch(Exception $e){
    die(var_dump($e));
}</pre>
<div class="dev-callout">注意
<p>同样，您将需要使用本地 MySQL 用户名和密码更新 <code>$user</code> 和 <code>$pwd</code> 的值。</p>
</div>
</li>
<li>
<p>在数据库连接代码后面添加用于将注册信息插入数据库的代码。</p>
<pre class="prettyprint">if(!empty($_POST)) {
try {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $date = date("Y-m-d");
    // Insert data
    $sql_insert = "INSERT INTO registration_tbl (name, email, date) 
                   VALUES (?,?,?)";
    $stmt = $conn-&gt;prepare($sql_insert);
    $stmt-&gt;bindValue(1, $name);
    $stmt-&gt;bindValue(2, $email);
    $stmt-&gt;bindValue(3, $date);
    $stmt-&gt;execute();
}
catch(Exception $e) {
    die(var_dump($e));
}
echo "&lt;h3&gt;Your're registered!&lt;/h3&gt;";
}</pre>
</li>
<li>
<p>最后，在上述代码后面添加从数据库中检索数据的代码。</p>
<pre class="prettyprint">$sql_select = "SELECT * FROM registration_tbl";
$stmt = $conn-&gt;query($sql_select);
$registrants = $stmt-&gt;fetchAll(); 
if(count($registrants) &gt; 0) {
    echo "&lt;h2&gt;People who are registered:&lt;/h2&gt;";
    echo "&lt;table&gt;";
    echo "&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;";
    echo "&lt;th&gt;Email&lt;/th&gt;";
    echo "&lt;th&gt;Date&lt;/th&gt;&lt;/tr&gt;";
    foreach($registrants as $registrant) {
        echo "&lt;tr&gt;&lt;td&gt;".$registrant['name']."&lt;/td&gt;";
        echo "&lt;td&gt;".$registrant['email']."&lt;/td&gt;";
        echo "&lt;td&gt;".$registrant['date']."&lt;/td&gt;&lt;/tr&gt;";
    }
    echo "&lt;/table&gt;";
} else {
    echo "&lt;h3&gt;No one is currently registered.&lt;/h3&gt;";
}</pre>
</li>
</ol>
<p>您现在可以浏览到 <a href="http://localhost/tasklist/index.php">http://localhost/registration/index.php</a> 来测试此应用程序。</p>
<h2>发布应用程序</h2>
<p>在本地测试您的应用程序之后，您可以使用 Git 将其发布到 Windows Azure 网站。但是，您首先需要更新应用程序中的数据库连接信息。使用之前获取的数据库连接信息（在“获取 SQL Database 连接信息”一节中），使用适当的值在<code>createdatabase.php</code> 和 <code>index.php</code> 文件中更新以下信息：</p>
<pre class="prettyprint">// DB connection info
$host = "tcp:&lt;value of SERVER&gt;";
$user = "&lt;value of USERNAME&gt;@&lt;server ID&gt;";
$pwd = "&lt;your password&gt;";
$db = "&lt;value of DATABASE&gt;";</pre>
<div class="dev-callout">注意
<p>在 <code>$host</code> 中，SERVER 的值的前面必须带有 <code>tcp:</code>，并且 <code>$user</code> 的值由 USERNAME、“@”和服务器 ID 串联而成。您的服务器 ID 为 SERVER 的值的前 10 个字符。</p>
</div>
<p>现在，您已准备好设置 Git 发布并发布应用程序。</p>
<div class="dev-callout">注意
<p>这些步骤与上面的“创建 Windows Azure 网站并设置 Git 发布”一节的结尾标明的步骤相同。</p>
</div>
<ol>
<li>
<p>打开 GitBash（或终端，如果 Git 在您的 <code>PATH</code> 中），将目录更改为应用程序的根目录，并运行以下命令：</p>
<pre class="prettyprint">git init
git add .
git commit -m "initial commit"
git remote add azure [URL for remote repository]
git push azure master</pre>
<p>系统将提示您输入之前创建的密码。</p>
</li>
<li>
<p>浏览到 <strong>http://[网站名].chinacloudsites.cn/createtable.php</strong> 以创建用于应用程序的 MySQL 表。</p>
</li>
<li>浏览到 <strong>http://[网站名].chinacloudsites.cn/index.php</strong> 以开始使用应用程序。</li>
</ol>
<p>发布应用程序之后，您可以开始对其进行更改并使用 Git 发布所做的更改。</p>
<h2>发布对应用程序所做的更改</h2>
<p>若要发布对应用程序所做的更改，请执行下列步骤：</p>
<ol>
<li>本地对应用程序进行更改。</li>
<li>
<p>打开 GitBash（或终端，如果 Git 在您的 <code>PATH</code> 中），将目录更改为应用程序的根目录，并运行以下命令：</p>
<pre class="prettyprint">git add .
git commit -m "comment describing changes"
git push azure master</pre>
<p>系统将提示您输入之前创建的密码。</p>
</li>
<li>
<p>浏览到 <strong>http://[网站名].chinacloudsites.cn/index.php</strong> 以查看您的更改。</p>
</li>
</ol></div>]]></bodyText><umbracoNaviHide>0</umbracoNaviHide><pageTitle>website w  sql database and git</pageTitle><localize>0</localize><localizePartial>0</localizePartial><sitemapHide>0</sitemapHide><linkid>website w  sql database and git</linkid><metaKeywords></metaKeywords><metaDescription><![CDATA[]]></metaDescription><headerExpose></headerExpose><footerExpose></footerExpose><urlDisplayName>website w  sql database and git</urlDisplayName><disqusComments>0</disqusComments><metaCanonical></metaCanonical><isHeader>0</isHeader><pageTemplate></pageTemplate></TextpageLeftNav></localize>